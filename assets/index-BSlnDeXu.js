(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&e(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(i){if(i.ep)return;i.ep=!0;const a=n(i);fetch(i.href,a)}})();async function w(t,o=3,n=1e3){for(let e=0;e<o;e++)try{const i=await fetch(t);if(!i.ok)throw new Error(`HTTP ${i.status}`);return i}catch(i){if(e===o-1)throw i;await new Promise(a=>setTimeout(a,n*2**e))}throw new Error("Unreachable")}async function ot(t,o,n){const e=new URLSearchParams({"acl:consumerKey":String(t)});n&&e.append("odpt:railway",n);const i=`${o}odpt:Station?${e.toString()}`;return await(await w(i)).json()}async function k(t,o,n,e){const i=(()=>{const u=new Date().getDay();return u>=1&&u<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),a=new URLSearchParams({"acl:consumerKey":String(o),"odpt:railway":e,"odpt:station":t,"odpt:calendar":i}),s=`${n}odpt:StationTimetable?${a.toString()}`;return await(await w(s)).json()}async function H(t,o,n){const e=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":n}),i=`${o}odpt:TrainInformation?${e.toString()}`;return await(await w(i)).json()}async function it(t,o,n){if(t.length===0)return[];const e=new URLSearchParams({"acl:consumerKey":String(o)});e.append("owl:sameAs",t.join(","));const i=`${n}odpt:Station?${e.toString()}`;return await(await w(i)).json()}async function at(t,o){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${o}odpt:Railway?${n.toString()}`;return await(await w(e)).json()}async function st(t,o,n){const e=new URLSearchParams({"acl:consumerKey":String(o)});e.append("owl:sameAs",t);const i=`${n}odpt:Railway?${e.toString()}`,s=await(await w(i)).json();return s.length>0?s[0]:null}async function rt(t,o){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${o}odpt:RailDirection?${n.toString()}`;return await(await w(e)).json()}async function ct(t,o){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${o}odpt:TrainType?${n.toString()}`;return await(await w(e)).json()}function I(t){if(!t)return"N/A";if(typeof t=="string")return t;const o=t;return o.ja||o.en||"N/A"}function $(t){const[o,n]=t.split(":").map(e=>Number(e));return o*60+n}function T(t,o,n,e=5){return(t.find(s=>s["odpt:railDirection"]===o)?.["odpt:stationTimetableObject"]??[]).filter(s=>typeof s["odpt:departureTime"]=="string").filter(s=>$(s["odpt:departureTime"])>=n).slice(0,e)}function lt(...t){const o=new Set;for(const n of t)for(const e of n??[]){const i=e["odpt:destinationStation"];if(i)if(Array.isArray(i)){for(const a of i)if(a){if(typeof a=="string")o.add(a);else if(typeof a=="object"){const s=a["owl:sameAs"]||a["@id"]||a.id;s&&typeof s=="string"&&o.add(s)}}}else typeof i=="string"&&o.add(i)}return o}class dt{constructor(o=500,n,e){if(this.maxEntries=o,this.ttlMs=n,this.persistKeyName=e,this.map=new Map,e&&typeof localStorage<"u")try{const i=localStorage.getItem(e);if(i){const a=JSON.parse(i);for(const s of Object.keys(a)){const r=a[s];(!r.expires||r.expires>Date.now())&&this.map.set(s,r)}}}catch{}}get(o){const n=this.map.get(o);if(n){if(n.expires&&n.expires<=Date.now()){this.map.delete(o);return}return this.map.delete(o),this.map.set(o,n),n.v}}set(o,n){const e=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(o)&&this.map.delete(o),this.map.set(o,{v:n,expires:e});this.map.size>this.maxEntries;){const i=this.map.keys().next().value;this.map.delete(i)}this.persistKeyName&&this.persist()}has(o){return typeof this.get(o)<"u"}persist(){if(this.persistKeyName)try{const o={};for(const[n,e]of this.map.entries())o[n]=e;localStorage.setItem(this.persistKeyName,JSON.stringify(o))}catch{}}keys(){return Array.from(this.map.keys())}enablePersistence(o){this.persistKeyName=o,this.persist()}}const tt="t2board_railway_uri",et="t2board_station_uri",Y="t2board_api_key";function ut(t){document.title=t}function F(t){const o=document.getElementById("station-header");o&&(o.textContent=t||"")}function ft(){const t=document.getElementById("departures-inbound"),o=document.getElementById("departures-outbound"),n='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=n),o&&(o.innerHTML=n)}function mt(t,o){const n=document.getElementById("direction-inbound-header"),e=document.getElementById("direction-outbound-header");n&&(n.textContent=t),e&&(e.textContent=o)}function L(t,o,n,e){const i=document.getElementById(`departures-${t}`);if(i){if(o.length===0){i.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}i.innerHTML=o.map(a=>{const s=a["odpt:departureTime"],r=a["odpt:trainType"]||"";let u="N/A";const c=a["odpt:destinationStation"];if(Array.isArray(c)&&c.length>0){const p=c[0];if(typeof p=="string")u=n.get(p)||p;else if(p&&typeof p=="object"&&(u=p["dc:title"]||p.title||"N/A",(!u||u==="N/A")&&p["owl:sameAs"])){const B=p["owl:sameAs"];typeof B=="string"&&(u=n.get(B)||B)}}else typeof c=="string"&&(u=n.get(c)||c);const f=e[r]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${s}">--</div>
          <div class="time-col text-center">${s}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${f.class}">${f.name}</span>
          </div>
          <div class="destination-text">${u}</div>
        </div>`}).join("")}}let _;function pt(t){const[o,n]=(t||"").split(":"),e=Number(o||0),i=Number(n||0);return e*3600+i*60}function G(){const t=Array.from(document.querySelectorAll("[data-departure]")),o=new Date,n=o.getHours()*3600+o.getMinutes()*60+o.getSeconds();for(const e of t){const i=e.getAttribute("data-departure")||"",s=pt(i)-n;if(s<=0)e.textContent="出発";else if(s<=60)e.textContent="到着";else{const r=Math.ceil(s/60);e.textContent=`${r}分`}}}function J(t=15e3){G(),typeof _<"u"&&clearInterval(_),_=window.setInterval(G,t)}function W(){const t=document.getElementById("time-header");if(!t)return;const o=new Date;t.textContent=`${String(o.getHours()).padStart(2,"0")}:${String(o.getMinutes()).padStart(2,"0")}`}function z(t,o){const n=localStorage.getItem(et),e=t.find(a=>a.name===o)||t[0];let i=e;if(n){const a=t.find(s=>s.uri===n);a&&(i=a)}else t.length>0&&(i=e||t[0]);return i}function yt(t,o){const n=localStorage.getItem(tt),e=t.find(a=>a.uri===o)||t[0];let i=e;if(n){const a=t.find(s=>s.uri===n);a&&(i=a)}else t.length>0&&(i=e||t[0]);return i}function q(t,o,n){const e=document.getElementById("config-modal"),i=document.getElementById("station-select");if(!e||!i)return;function a(c){i.innerHTML=t.map(f=>`<option value="${f.uri}" ${f.uri===c?"selected":""}>${f.name}</option>`).join("")}a(o),document.getElementById("settings-button")?.addEventListener("click",()=>{a(o),wt()}),document.getElementById("close-modal")?.addEventListener("click",()=>{R()}),document.getElementById("save-settings")?.addEventListener("click",()=>{const c=i.value;localStorage.setItem(et,c),n(c),R()}),e.addEventListener("click",c=>{c.target===e&&R()})}function gt(t,o,n){const e=document.getElementById("railway-modal"),i=document.getElementById("railway-select");if(!e||!i)return;function a(c){i.innerHTML=t.map(f=>`<option value="${f.uri}" ${f.uri===c?"selected":""}>${f.name}</option>`).join("")}a(o),document.getElementById("railway-button")?.addEventListener("click",()=>{a(o),ht()}),document.getElementById("close-railway-modal")?.addEventListener("click",()=>{U()}),document.getElementById("save-railway")?.addEventListener("click",()=>{const c=i.value;localStorage.setItem(tt,c),n(c),U()}),e.addEventListener("click",c=>{c.target===e&&U()})}function X(t,o){console.log("Open up API key modal setup");const n=document.getElementById("api-key-modal");console.log(n);const e=document.getElementById("api-key-input");if(console.log(e),!n||!e)return;e.value=t||"";const i=document.getElementById("save-api-key"),a=document.getElementById("close-api-key");i?.addEventListener("click",()=>{const s=e.value?e.value.trim():null;s?localStorage.setItem(Y,s):localStorage.removeItem(Y),o(s),N()}),a?.addEventListener("click",()=>N()),n.addEventListener("click",s=>{s.target===n&&N()})}function wt(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function R(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function ht(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function U(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function M(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function N(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function D(t,o="info"){const n=document.getElementById("status-banner");n&&(n.classList.remove("hidden"),n.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),o==="error"?n.classList.add("bg-red-100","text-red-800"):o==="warn"?n.classList.add("bg-yellow-100"):n.classList.add("bg-blue-100"),n.textContent=t)}function St(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}let d=null,m="https://api-challenge.odpt.org/api/v4/",nt="odpt.Railway:Tokyu.Toyoko",x=[],It=null,h=null,S=null,j="渋谷・副都心線方面",C="横浜・元町中華街方面";const E={},A=new Map;let y=[],K="武蔵小杉 (TY11)",l={railwayUri:null,stationUri:null,stationName:null},O,P;const g=new dt(500);async function Et(t,o){try{const n=await rt(t,o);for(const e of n){const i=e["owl:sameAs"]||e["@id"],a=I(e["dc:title"]);i&&typeof i=="string"&&A.set(i,a)}}catch(n){console.warn("Failed to load direction names:",n)}}async function At(t,o){try{const n=await ct(t,o);for(const e of n){const i=e["owl:sameAs"]||e["@id"],a=I(e["dc:title"]);if(i&&typeof i=="string"){let s="type-LOC";const r=a.toLowerCase();r.includes("特急")||r.includes("limited")?s=r.includes("通勤")?"type-CLE":"type-LE":r.includes("急行")||r.includes("express")?s=r.includes("通勤")?"type-CEXP":"type-EXP":r.includes("s-train")||r.includes("sトレイン")?s="type-STR":(r.includes("f-liner")||r.includes("fライナー"))&&(s="type-FLN"),E[i]={name:a,class:s}}}}catch(n){console.warn("Failed to load train types:",n)}}async function Q(t,o,n){try{const e=await st(t,o,n);if(!e){console.warn("Railway not found:",t);return}It=e,h=e["odpt:ascendingRailDirection"]||"odpt.RailDirection:Inbound",S=e["odpt:descendingRailDirection"]||"odpt.RailDirection:Outbound",h&&A.has(h)&&(j=A.get(h)||j),S&&A.has(S)&&(C=A.get(S)||C);const i=I(e["dc:title"]||e["odpt:railwayTitle"]);ut(`${i} 発車案内板`)}catch(e){console.warn("Failed to load railway metadata:",e)}}function Tt(t){return document.getElementById(t)}async function V(...t){if(!d)return;const o=lt(...t),n=Array.from(o).filter(e=>!g.has(e));if(n.length!==0)try{const e=await it(n,String(d),m);for(const i of e){const a=i["owl:sameAs"]||i["@id"]||i.id,s=I(i["dc:title"]||i["odpt:stationTitle"]||i.title);a&&typeof a=="string"&&g.set(a,s)}for(const i of n)g.has(i)||g.set(i,i)}catch(e){console.warn("Failed to fetch station names for destinations:",e)}}async function v(){if(!d){const s=document.getElementById("departures-inbound"),r=document.getElementById("departures-outbound");s&&(s.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>'),r&&(r.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>');return}typeof O<"u"&&clearInterval(O),typeof P<"u"&&clearInterval(P);const t=y.find(s=>s.uri===l.stationUri);if(!t||!l.railwayUri){const s=Tt("station-header");s&&(s.textContent="エラー: 駅または路線が選択されていません");return}F(t.name),ft(),mt(j,C);let o=[];try{o=await k(t.uri,String(d),m,l.railwayUri)}catch(s){console.error("Failed to fetch timetable:",s),D("API エラーが発生しました。API キーを確認してください。","error"),M();return}const n=new Date,e=$(`${String(n.getHours()).padStart(2,"0")}:${String(n.getMinutes()).padStart(2,"0")}`),i=T(o,h||"odpt.RailDirection:Inbound",e),a=T(o,S||"odpt.RailDirection:Outbound",e);await V(i,a),L("inbound",i,g,E),L("outbound",a,g,E),J();try{l.railwayUri&&(await H(String(d),m,l.railwayUri),St())}catch(s){console.warn("Failed to fetch status:",s),D("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}O=window.setInterval(async()=>{let s=[];try{s=await k(t.uri,String(d),m,l.railwayUri)}catch(p){console.error("Periodic timetable fetch failed:",p),D("定期更新の取得中にエラーが発生しました。API キーを確認してください。","warn"),M();return}const r=new Date,u=$(`${String(r.getHours()).padStart(2,"0")}:${String(r.getMinutes()).padStart(2,"0")}`),c=T(s,h||"odpt.RailDirection:Inbound",u),f=T(s,S||"odpt.RailDirection:Outbound",u);await V(c,f),L("inbound",c,g,E),L("outbound",f,g,E),J()},15e4),P=window.setInterval(()=>{l.railwayUri&&H(String(d),m,l.railwayUri)},3e5),window.setInterval(W,1e3),W()}async function Lt(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const o=await t.json();o?.ODPT_API_KEY&&(d=o.ODPT_API_KEY),o?.DEFAULT_RAILWAY&&(nt=o.DEFAULT_RAILWAY),o?.DEFAULT_STATION_NAME&&(K=o.DEFAULT_STATION_NAME),o?.API_BASE_URL&&(m=o.API_BASE_URL)}catch(t){console.warn("Failed to load ./config.json:",t)}}async function vt(){await Lt();try{console.log("Loading from localstorage ",Date.now());const t=localStorage.getItem("t2board_api_key");t&&(console.log("Overriding API key from localStorage"),d=t)}catch{}}async function b(){try{await vt()}catch(n){console.warn("Error loading local config:",n)}if(console.log("ODPT_API_KEY:",d,Date.now()),!d){X(d,n=>{n&&(d=n),b()}),M();return}await Et(String(d),m),await At(String(d),m);try{x=(await at(String(d),m)).filter(e=>e["@type"]==="odpt:Railway").map(e=>{const i=I(e["dc:title"]||e["odpt:railwayTitle"]),a=e["odpt:operator"]||"";return{uri:e["owl:sameAs"]||e["@id"]||"",name:i,operator:a}}).filter(e=>e.uri&&e.name).sort((e,i)=>e.name.localeCompare(i.name,"ja"))}catch(n){console.error("Error fetching railway list:",n),F("エラー: 路線リスト取得失敗")}const t=yt(x,nt);t&&(l.railwayUri=t.uri,await Q(t.uri,String(d),m)),gt(x,l.railwayUri,async n=>{l.railwayUri=n,await Q(n,String(d),m),await Z(n);const e=z(y,K);e&&(l={...l,stationUri:e.uri,stationName:e.name}),q(y,l.stationUri,i=>{const a=y.find(s=>s.uri===i);l={...l,stationUri:i,stationName:a?a.name:null},v()}),v()}),l.railwayUri&&await Z(l.railwayUri);const o=z(y,K);o&&(l={...l,stationUri:o.uri,stationName:o.name}),X(d,n=>{n&&(d=n),b()}),q(y,l.stationUri,n=>{const e=y.find(i=>i.uri===n);l={...l,stationUri:n,stationName:e?e.name:null},v()}),v()}async function Z(t){try{y=(await ot(String(d),m,t)).map(n=>{const e=I(n["dc:title"]||n["odpt:stationTitle"]),i=n["odpt:stationCode"]||"";return{name:i?`${e} (${i})`:e,uri:n["owl:sameAs"]||""}}).filter(n=>n.uri).sort((n,e)=>n.name.localeCompare(e.name,"ja"))}catch(o){console.error("Error fetching station list:",o),F("エラー: 駅リスト取得失敗")}}window.initializeBoard=b;window.onload=b;
