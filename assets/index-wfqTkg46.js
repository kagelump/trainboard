(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&e(r)}).observe(document,{childList:!0,subtree:!0});function i(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(o){if(o.ep)return;o.ep=!0;const a=i(o);fetch(o.href,a)}})();async function T(t,n=3,i=1e3){for(let e=0;e<n;e++)try{const o=await fetch(t);if(!o.ok)throw new Error(`HTTP ${o.status}`);return o}catch(o){if(e===n-1)throw o;await new Promise(a=>setTimeout(a,i*2**e))}throw new Error("Unreachable")}async function ct(t,n,i){const e=new URLSearchParams({"acl:consumerKey":String(t)});i&&e.append("odpt:railway",i);const o=`${n}odpt:Station?${e.toString()}`;return await(await T(o)).json()}async function Y(t,n,i,e){const o=(()=>{const u=new Date().getDay();return u>=1&&u<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),a=new URLSearchParams({"acl:consumerKey":String(n),"odpt:railway":e,"odpt:station":t,"odpt:calendar":o}),r=`${i}odpt:StationTimetable?${a.toString()}`;return await(await T(r)).json()}async function J(t,n,i){const e=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":i}),o=`${n}odpt:TrainInformation?${e.toString()}`;return await(await T(o)).json()}async function dt(t,n,i){if(t.length===0)return[];const e=new URLSearchParams({"acl:consumerKey":String(n)});e.append("owl:sameAs",t.join(","));const o=`${i}odpt:Station?${e.toString()}`;return await(await T(o)).json()}async function ut(t,n){const i=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${n}odpt:Railway?${i.toString()}`;return await(await T(e)).json()}async function pt(t,n,i){const e=new URLSearchParams({"acl:consumerKey":String(n)});e.append("owl:sameAs",t);const o=`${i}odpt:Railway?${e.toString()}`,r=await(await T(o)).json();return r.length>0?r[0]:null}async function ft(t,n){const i=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${n}odpt:RailDirection?${i.toString()}`;return await(await T(e)).json()}async function yt(t,n){const i=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${n}odpt:TrainType?${i.toString()}`;return await(await T(e)).json()}function h(t){if(!t)return"N/A";if(typeof t=="string")return t;const n=t;return n.ja||n.en||"N/A"}function M(t){const[n,i]=t.split(":").map(e=>Number(e));return n*60+i}function S(t,n,i,e=5){return(t.find(r=>r["odpt:railDirection"]===n)?.["odpt:stationTimetableObject"]??[]).filter(r=>typeof r["odpt:departureTime"]=="string").filter(r=>M(r["odpt:departureTime"])>=i).slice(0,e)}function mt(...t){const n=new Set;for(const i of t)for(const e of i??[]){const o=e["odpt:destinationStation"];if(o)if(Array.isArray(o)){for(const a of o)if(a){if(typeof a=="string")n.add(a);else if(typeof a=="object"){const r=a["owl:sameAs"]||a["@id"]||a.id;r&&typeof r=="string"&&n.add(r)}}}else typeof o=="string"&&n.add(o)}return n}function C(t=new Date){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}class Tt{constructor(n=500,i,e){if(this.maxEntries=n,this.ttlMs=i,this.persistKeyName=e,this.map=new Map,e&&typeof localStorage<"u")try{const o=localStorage.getItem(e);if(o){const a=JSON.parse(o);for(const r of Object.keys(a)){const s=a[r];(!s.expires||s.expires>Date.now())&&this.map.set(r,s)}}}catch(o){console.warn(`Failed to restore cache from localStorage key "${e}":`,o)}}get(n){const i=this.map.get(n);if(i){if(i.expires&&i.expires<=Date.now()){this.map.delete(n);return}return this.map.delete(n),this.map.set(n,i),i.v}}set(n,i){const e=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(n)&&this.map.delete(n),this.map.set(n,{v:i,expires:e});this.map.size>this.maxEntries;){const o=this.map.keys().next().value;this.map.delete(o)}this.persistKeyName&&this.persist()}has(n){return typeof this.get(n)<"u"}persist(){if(this.persistKeyName)try{const n={};for(const[i,e]of this.map.entries())n[i]=e;localStorage.setItem(this.persistKeyName,JSON.stringify(n))}catch(n){console.warn(`Failed to persist cache to localStorage key "${this.persistKeyName}":`,n)}}keys(){return Array.from(this.map.keys())}enablePersistence(n){this.persistKeyName=n,this.persist()}}const ot="t2board_railway_uri",at="t2board_station_uri",$="t2board_api_key",wt=15e3;let W=!1,z=!1,G=!1;function bt(t){document.title=t}function H(t){const n=document.getElementById("station-header");n&&(n.textContent=t||"")}function gt(){const t=document.getElementById("departures-inbound"),n=document.getElementById("departures-outbound"),i='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=i),n&&(n.innerHTML=i)}function ht(t,n){const i=document.getElementById("direction-inbound-header"),e=document.getElementById("direction-outbound-header");i&&(i.textContent=t),e&&(e.textContent=n)}function k(t,n,i,e){const o=document.getElementById(`departures-${t}`);if(o){if(n.length===0){o.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}o.innerHTML=n.map(a=>{const r=a["odpt:departureTime"],s=a["odpt:trainType"]||"";let u="N/A";const d=a["odpt:destinationStation"];if(Array.isArray(d)&&d.length>0){const f=d[0];if(typeof f=="string")u=i.get(f)||f;else if(f&&typeof f=="object"&&(u=f["dc:title"]||f.title||"N/A",(!u||u==="N/A")&&f["owl:sameAs"])){const R=f["owl:sameAs"];typeof R=="string"&&(u=i.get(R)||R)}}else typeof d=="string"&&(u=i.get(d)||d);const x=e[s]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${r}">--</div>
          <div class="time-col text-center">${r}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${x.class}">${x.name}</span>
          </div>
          <div class="destination-text">${u}</div>
        </div>`}).join("")}}let A;function xt(t){const[n,i]=(t||"").split(":"),e=Number(n||0),o=Number(i||0);return e*3600+o*60}function V(){const t=Array.from(document.querySelectorAll("[data-departure]")),n=new Date,i=n.getHours()*3600+n.getMinutes()*60+n.getSeconds();for(const e of t){const o=e.getAttribute("data-departure")||"",r=xt(o)-i;if(r<=0)e.textContent="出発";else if(r<=60)e.textContent="到着";else{const s=Math.ceil(r/60);e.textContent=`${s}分`}}}function q(t=wt){V(),typeof A<"u"&&clearInterval(A),A=window.setInterval(V,t)}function Q(){const t=document.getElementById("time-header");t&&(t.textContent=C())}function X(t,n){const i=localStorage.getItem(at),e=t.find(a=>a.name===n)||t[0];let o=e;if(i){const a=t.find(r=>r.uri===i);a&&(o=a)}else t.length>0&&(o=e||t[0]);return o}function Et(t,n){const i=localStorage.getItem(ot),e=t.find(a=>a.uri===n)||t[0];let o=e;if(i){const a=t.find(r=>r.uri===i);a&&(o=a)}else t.length>0&&(o=e||t[0]);return o}function Z(t,n,i){const e=document.getElementById("config-modal"),o=document.getElementById("station-select");if(!e||!o)return;function a(r){o.innerHTML=t.map(s=>`<option value="${s.uri}" ${s.uri===r?"selected":""}>${s.name}</option>`).join("")}a(n),z||(document.getElementById("settings-button")?.addEventListener("click",()=>{a(n),kt()}),document.getElementById("close-modal")?.addEventListener("click",()=>{v()}),document.getElementById("save-settings")?.addEventListener("click",()=>{const d=o.value;localStorage.setItem(at,d),i(d),v()}),e.addEventListener("click",d=>{d.target===e&&v()}),z=!0)}function St(t,n,i){const e=document.getElementById("railway-modal"),o=document.getElementById("railway-select");if(!e||!o)return;function a(r){o.innerHTML=t.map(s=>`<option value="${s.uri}" ${s.uri===r?"selected":""}>${s.name}</option>`).join("")}a(n),G||(document.getElementById("railway-button")?.addEventListener("click",()=>{a(n),It()}),document.getElementById("close-railway-modal")?.addEventListener("click",()=>{_()}),document.getElementById("save-railway")?.addEventListener("click",()=>{const d=o.value;localStorage.setItem(ot,d),i(d),_()}),e.addEventListener("click",d=>{d.target===e&&_()}),G=!0)}function tt(t,n){const i=document.getElementById("api-key-modal"),e=document.getElementById("api-key-input");if(!(!i||!e)&&(e.value=t||"",!W)){const o=document.getElementById("save-api-key"),a=document.getElementById("close-api-key");o?.addEventListener("click",()=>{const r=e.value?e.value.trim():null;r?localStorage.setItem($,r):localStorage.removeItem($),n(r),B()}),a?.addEventListener("click",()=>B()),i.addEventListener("click",r=>{r.target===i&&B()}),W=!0}}function kt(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function v(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function It(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function _(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function P(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function B(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function U(t,n="info"){const i=document.getElementById("status-banner");i&&(i.classList.remove("hidden"),i.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),n==="error"?i.classList.add("bg-red-100","text-red-800"):n==="warn"?i.classList.add("bg-yellow-100"):i.classList.add("bg-blue-100"),i.textContent=t)}function Lt(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}const rt={"odpt.TrainType:Sotetsu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Sotetsu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Sotetsu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Sotetsu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Sotetsu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Sotetsu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Odakyu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Odakyu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Odakyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Odakyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Odakyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Odakyu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Odakyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Keikyu.AccessExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.AirportRapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Keikyu.EveningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Keikyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Keikyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Keikyu.MorningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.RapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Seibu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Seibu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Seibu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.HaijimaLiner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Seibu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Seibu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Seibu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tokyu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Tokyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tokyu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tokyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tokyu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.KawagoeLimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tobu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Tobu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Tobu.SL-Taiju":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.SectionExpress":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.SectionSemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.TH-LINER":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.TJ-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.ChuoSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.CommuterRapid":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:JR-East.CommuterSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:JR-East.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:JR-East.Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:JR-East.OmeSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:JR-East.SpecialRapid":{outline:"black",text:"yellow",fill:"red"}};function Rt(){if(document.getElementById("train-type-dynamic-styles"))return;const t=document.createElement("style");t.id="train-type-dynamic-styles";let n="";for(const[i,e]of Object.entries(rt)){const o=lt(i);n+=`
.${o} {
  background-color: ${e.fill};
  color: ${e.text};
  border: 2px solid ${e.outline};
}
`}t.textContent=n,document.head.appendChild(t)}function lt(t){return"train-type-"+t.replace(/[:.]/g,"-")}function At(t){return t in rt?lt(t):"type-LOC"}let c=null,p="https://api-challenge.odpt.org/api/v4/",st="odpt.Railway:Tokyu.Toyoko";const vt=15e4,_t=3e5,Bt=1e3;let N=[],Ut=null,w=null,b=null,K="渋谷・副都心線方面",j="横浜・元町中華街方面";const g={},E=new Map;let y=[],F="武蔵小杉 (TY11)",l={railwayUri:null,stationUri:null,stationName:null},O,D;const m=new Tt(500);async function Nt(t,n){try{const i=await ft(t,n);for(const e of i){const o=e["owl:sameAs"]||e["@id"],a=h(e["dc:title"]);o&&typeof o=="string"&&E.set(o,a)}}catch(i){console.warn("Failed to load direction names:",i)}}async function Ot(t,n){try{const i=await yt(t,n);for(const e of i){const o=e["owl:sameAs"]||e["@id"];if(!o||typeof o!="string")continue;const a=h(e["dc:title"]);if(!a)continue;const r=At(o);g[o]={name:a,class:r}}console.log(`Loaded ${Object.keys(g).length} train types`)}catch(i){console.warn("Failed to load train types:",i)}}async function et(t,n,i){try{const e=await pt(t,n,i);if(!e){console.warn("Railway not found:",t);return}Ut=e,w=e["odpt:ascendingRailDirection"]||"odpt.RailDirection:Inbound",b=e["odpt:descendingRailDirection"]||"odpt.RailDirection:Outbound",w&&E.has(w)&&(K=E.get(w)||K),b&&E.has(b)&&(j=E.get(b)||j);const o=h(e["dc:title"]||e["odpt:railwayTitle"]);bt(`${o} 発車案内板`)}catch(e){console.warn("Failed to load railway metadata:",e)}}function Dt(t){return document.getElementById(t)}async function it(...t){if(!c)return;const n=mt(...t),i=Array.from(n).filter(e=>!m.has(e));if(i.length!==0)try{const e=await dt(i,String(c),p);for(const o of e){const a=o["owl:sameAs"]||o["@id"]||o.id,r=h(o["dc:title"]||o["odpt:stationTitle"]||o.title);a&&typeof a=="string"&&m.set(a,r)}for(const o of i)m.has(o)||m.set(o,o)}catch(e){console.warn("Failed to fetch station names for destinations:",e)}}async function I(){if(!c){const r=document.getElementById("departures-inbound"),s=document.getElementById("departures-outbound");r&&(r.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>'),s&&(s.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>');return}typeof O<"u"&&clearInterval(O),typeof D<"u"&&clearInterval(D);const t=y.find(r=>r.uri===l.stationUri);if(!t||!l.railwayUri){const r=Dt("station-header");r&&(r.textContent="エラー: 駅または路線が選択されていません");return}H(t.name),gt(),ht(K,j);let n=[];try{n=await Y(t.uri,String(c),p,l.railwayUri)}catch(r){console.error("Failed to fetch timetable:",r),U("API エラーが発生しました。API キーを確認してください。","error"),P();return}const e=M(C(new Date)),o=S(n,w||"odpt.RailDirection:Inbound",e),a=S(n,b||"odpt.RailDirection:Outbound",e);await it(o,a),k("inbound",o,m,g),k("outbound",a,m,g),q();try{l.railwayUri&&(await J(String(c),p,l.railwayUri),Lt())}catch(r){console.warn("Failed to fetch status:",r),U("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}O=window.setInterval(async()=>{let r=[];try{r=await Y(t.uri,String(c),p,l.railwayUri)}catch(f){console.error("Periodic timetable fetch failed:",f),U("定期更新の取得中にエラーが発生しました。API キーを確認してください。","warn"),P();return}const u=M(C(new Date)),d=S(r,w||"odpt.RailDirection:Inbound",u),x=S(r,b||"odpt.RailDirection:Outbound",u);await it(d,x),k("inbound",d,m,g),k("outbound",x,m,g),q()},vt),D=window.setInterval(()=>{l.railwayUri&&J(String(c),p,l.railwayUri)},_t),window.setInterval(Q,Bt),Q()}async function Mt(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const n=await t.json();n?.ODPT_API_KEY&&(c=n.ODPT_API_KEY),n?.DEFAULT_RAILWAY&&(st=n.DEFAULT_RAILWAY),n?.DEFAULT_STATION_NAME&&(F=n.DEFAULT_STATION_NAME),n?.API_BASE_URL&&(p=n.API_BASE_URL)}catch(t){console.warn("Failed to load ./config.json:",t)}}async function Ct(){await Mt();try{const t=localStorage.getItem($);t&&(c=t)}catch{}}async function L(){try{await Ct()}catch(i){console.warn("Error loading local config:",i)}if(Rt(),!c){tt(c,i=>{i&&(c=i),L()}),P();return}await Nt(String(c),p),await Ot(String(c),p);try{N=(await ut(String(c),p)).filter(e=>e["@type"]==="odpt:Railway").map(e=>{const o=h(e["dc:title"]||e["odpt:railwayTitle"]),a=e["odpt:operator"]||"";return{uri:e["owl:sameAs"]||e["@id"]||"",name:o,operator:a}}).filter(e=>e.uri&&e.name).sort((e,o)=>e.name.localeCompare(o.name,"ja"))}catch(i){console.error("Error fetching railway list:",i),H("エラー: 路線リスト取得失敗")}const t=Et(N,st);t&&(l.railwayUri=t.uri,await et(t.uri,String(c),p)),St(N,l.railwayUri,async i=>{l.railwayUri=i,await et(i,String(c),p),await nt(i);const e=X(y,F);e&&(l={...l,stationUri:e.uri,stationName:e.name}),Z(y,l.stationUri,o=>{const a=y.find(r=>r.uri===o);l={...l,stationUri:o,stationName:a?a.name:null},I()}),I()}),l.railwayUri&&await nt(l.railwayUri);const n=X(y,F);n&&(l={...l,stationUri:n.uri,stationName:n.name}),tt(c,i=>{i&&(c=i),L()}),Z(y,l.stationUri,i=>{const e=y.find(o=>o.uri===i);l={...l,stationUri:i,stationName:e?e.name:null},I()}),I()}async function nt(t){try{y=(await ct(String(c),p,t)).map(i=>{const e=h(i["dc:title"]||i["odpt:stationTitle"]),o=i["odpt:stationCode"]||"";return{name:o?`${e} (${o})`:e,uri:i["owl:sameAs"]||""}}).filter(i=>i.uri).sort((i,e)=>i.name.localeCompare(e.name,"ja"))}catch(n){console.error("Error fetching station list:",n),H("エラー: 駅リスト取得失敗")}}window.initializeBoard=L;window.onload=L;
