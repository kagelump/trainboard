(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function o(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(i){if(i.ep)return;i.ep=!0;const a=o(i);fetch(i.href,a)}})();async function y(t,e=3,o=1e3){for(let n=0;n<e;n++)try{const i=await fetch(t);if(!i.ok)throw new Error(`HTTP ${i.status}`);return i}catch(i){if(n===e-1)throw i;await new Promise(a=>setTimeout(a,o*2**n))}throw new Error("Unreachable")}async function mt(t,e,o){if(!t||!e)throw new Error("API key and base URL are required");const n=new URLSearchParams({"acl:consumerKey":String(t)});o&&n.append("odpt:railway",o);const i=`${e}odpt:Station?${n.toString()}`;return await(await y(i)).json()}async function Tt(t,e,o,n){if(!e||!o||!t||!n)throw new Error("API key, base URL, station URI, and railway URI are required");const i=(()=>{const l=new Date().getDay();return l>=1&&l<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),a=new URLSearchParams({"acl:consumerKey":String(e),"odpt:railway":n,"odpt:station":t,"odpt:calendar":i}),r=`${o}odpt:StationTimetable?${a.toString()}`;return await(await y(r)).json()}async function tt(t,e,o){if(!t||!e||!o)throw new Error("API key, base URL, and railway URI are required");const n=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":o}),i=`${e}odpt:TrainInformation?${n.toString()}`;return await(await y(i)).json()}async function wt(t,e,o){if(!e||!o)throw new Error("API key and base URL are required");if(t.length===0)return[];const n=new URLSearchParams({"acl:consumerKey":String(e)});n.append("owl:sameAs",t.join(","));const i=`${o}odpt:Station?${n.toString()}`;return await(await y(i)).json()}async function gt(t,e){if(!t||!e)throw new Error("API key and base URL are required");const o=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:Railway?${o.toString()}`;return await(await y(n)).json()}async function bt(t,e,o){if(!e||!o||!t)throw new Error("API key, base URL, and railway URI are required");const n=new URLSearchParams({"acl:consumerKey":String(e)});n.append("owl:sameAs",t);const i=`${o}odpt:Railway?${n.toString()}`,r=await(await y(i)).json();return r.length>0?r[0]:null}async function ht(t,e){if(!t||!e)throw new Error("API key and base URL are required");const o=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:RailDirection?${o.toString()}`;return await(await y(n)).json()}async function Et(t,e){if(!t||!e)throw new Error("API key and base URL are required");const o=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:TrainType?${o.toString()}`;return await(await y(n)).json()}function b(t){if(!t)return"N/A";if(typeof t=="string")return t;const e=t;return e.ja||e.en||"N/A"}function et(t){const[e,o]=t.split(":").map(n=>Number(n));return e*60+o}function K(t,e,o,n=5){return(t.find(r=>r["odpt:railDirection"]===e)?.["odpt:stationTimetableObject"]??[]).filter(r=>typeof r["odpt:departureTime"]=="string").filter(r=>et(r["odpt:departureTime"])>=o).slice(0,n)}function kt(...t){const e=new Set;for(const o of t)for(const n of o??[]){const i=n["odpt:destinationStation"];if(i)if(Array.isArray(i)){for(const a of i)if(a){if(typeof a=="string")e.add(a);else if(typeof a=="object"){const r=a["owl:sameAs"]||a["@id"]||a.id;r&&typeof r=="string"&&e.add(r)}}}else typeof i=="string"&&e.add(i)}return e}function nt(t=new Date){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}function it(t){return document.getElementById(t)}const ot="t2board_railway_uri",at="t2board_station_uri",D="t2board_api_key",St=15e3;let j=!1,F=!1,H=!1;function xt(t){document.title=t}function It(t){const e=document.getElementById("station-header");e&&(e.textContent=t||"")}function Lt(){const t=document.getElementById("departures-inbound"),e=document.getElementById("departures-outbound"),o='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=o),e&&(e.innerHTML=o)}function Rt(t,e){const o=document.getElementById("direction-inbound-header"),n=document.getElementById("direction-outbound-header");o&&(o.textContent=t),n&&(n.textContent=e)}function J(t,e,o,n){const i=document.getElementById(`departures-${t}`);if(i){if(e.length===0){i.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}i.innerHTML=e.map(a=>{const r=a["odpt:departureTime"],s=a["odpt:trainType"]||"";let l="N/A";const c=a["odpt:destinationStation"];if(Array.isArray(c)&&c.length>0){const u=c[0];if(typeof u=="string")l=o.get(u)||u;else if(u&&typeof u=="object"){const x=u;if(l=x["dc:title"]||x.title||"N/A",(!l||l==="N/A")&&x["owl:sameAs"]){const v=x["owl:sameAs"];typeof v=="string"&&(l=o.get(v)||v)}}}else typeof c=="string"&&(l=o.get(c)||c);const T=n[s]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${r||""}">--</div>
          <div class="time-col text-center">${r||"--"}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${T.class}">${T.name}</span>
          </div>
          <div class="destination-text">${l}</div>
        </div>`}).join("")}}let _;function At(t){const[e,o]=(t||"").split(":"),n=Number(e||0),i=Number(o||0);return n*3600+i*60}function Y(){const t=Array.from(document.querySelectorAll("[data-departure]")),e=new Date,o=e.getHours()*3600+e.getMinutes()*60+e.getSeconds();for(const n of t){const i=n.getAttribute("data-departure")||"",r=At(i)-o;if(r<=0)n.textContent="出発";else if(r<=60)n.textContent="到着";else{const s=Math.ceil(r/60);n.textContent=`${s}分`}}}function vt(t=St){Y(),typeof _<"u"&&clearInterval(_),_=window.setInterval(Y,t)}function q(){const t=document.getElementById("time-header");t&&(t.textContent=nt())}function W(t,e){const o=localStorage.getItem(at),n=t.find(a=>a.name===e)||t[0];let i=n;if(o){const a=t.find(r=>r.uri===o);a&&(i=a)}else t.length>0&&(i=n||t[0]);return i}function _t(t,e){const o=localStorage.getItem(ot),n=t.find(a=>a.uri===e)||t[0];let i=n;if(o){const a=t.find(r=>r.uri===o);a&&(i=a)}else t.length>0&&(i=n||t[0]);return i}function z(t,e,o){const n=document.getElementById("config-modal"),i=document.getElementById("station-select");if(!n||!i)return;function a(r){i.innerHTML=t.map(s=>`<option value="${s.uri}" ${s.uri===r?"selected":""}>${s.name}</option>`).join("")}a(e),F||(document.getElementById("settings-button")?.addEventListener("click",()=>{a(e),Nt()}),document.getElementById("close-modal")?.addEventListener("click",()=>{U()}),document.getElementById("save-settings")?.addEventListener("click",()=>{const c=i.value;localStorage.setItem(at,c),o(c),U()}),n.addEventListener("click",c=>{c.target===n&&U()}),F=!0)}function Ut(t,e,o){const n=document.getElementById("railway-modal"),i=document.getElementById("railway-select");if(!n||!i)return;function a(r){i.innerHTML=t.map(s=>`<option value="${s.uri}" ${s.uri===r?"selected":""}>${s.name}</option>`).join("")}a(e),H||(document.getElementById("railway-button")?.addEventListener("click",()=>{a(e),Ct()}),document.getElementById("close-railway-modal")?.addEventListener("click",()=>{N()}),document.getElementById("save-railway")?.addEventListener("click",()=>{const c=i.value;localStorage.setItem(ot,c),o(c),N()}),n.addEventListener("click",c=>{c.target===n&&N()}),H=!0)}function G(t,e){const o=document.getElementById("api-key-modal"),n=document.getElementById("api-key-input");if(!(!o||!n)&&(n.value=t||"",!j)){const i=document.getElementById("save-api-key"),a=document.getElementById("close-api-key");i?.addEventListener("click",()=>{const r=n.value?n.value.trim():null;r?localStorage.setItem(D,r):localStorage.removeItem(D),e(r),C()}),a?.addEventListener("click",()=>C()),o.addEventListener("click",r=>{r.target===o&&C()}),j=!0}}function Nt(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function U(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function Ct(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function N(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function rt(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function C(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function st(t,e="info"){const o=document.getElementById("status-banner");o&&(o.classList.remove("hidden"),o.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),e==="error"?o.classList.add("bg-red-100","text-red-800"):e==="warn"?o.classList.add("bg-yellow-100"):o.classList.add("bg-blue-100"),o.textContent=t)}function Bt(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}const lt={"odpt.TrainType:Sotetsu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Sotetsu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Sotetsu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Sotetsu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Sotetsu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Sotetsu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Odakyu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Odakyu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Odakyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Odakyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Odakyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Odakyu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Odakyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Keikyu.AccessExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.AirportRapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Keikyu.EveningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Keikyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Keikyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Keikyu.MorningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.RapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Seibu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Seibu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Seibu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.HaijimaLiner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Seibu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Seibu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Seibu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tokyu.CommuterLimitedExpress":{outline:"yellow",text:"red",fill:"white"},"odpt.TrainType:Tokyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tokyu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.LimitedExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tokyu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.KawagoeLimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tobu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Tobu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Tobu.SL-Taiju":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.SectionExpress":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.SectionSemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.TH-LINER":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.TJ-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.ChuoSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.CommuterRapid":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:JR-East.CommuterSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:JR-East.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:JR-East.Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:JR-East.OmeSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:JR-East.SpecialRapid":{outline:"black",text:"yellow",fill:"red"}};function Ot(){if(document.getElementById("train-type-dynamic-styles"))return;const t=document.createElement("style");t.id="train-type-dynamic-styles";let e="";for(const[o,n]of Object.entries(lt)){const i=ct(o);e+=`
.${i} {
  background-color: ${n.fill};
  color: ${n.text};
  border: 2px solid ${n.outline};
}
`}t.textContent=e,document.head.appendChild(t)}function ct(t){return"train-type-"+t.replace(/[:.]/g,"-")}function Dt(t){return t in lt?ct(t):"type-LOC"}let A=null,dt="https://api-challenge.odpt.org/api/v4/",ut="odpt.Railway:Tokyu.Toyoko",M="武蔵小杉 (TY11)";const Mt=15e4,Pt=3e5,$t=1e3;function V(t){A=t}function f(){return A}function S(){return dt}async function Kt(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const e=await t.json();e?.ODPT_API_KEY&&(A=e.ODPT_API_KEY),e?.DEFAULT_RAILWAY&&(ut=e.DEFAULT_RAILWAY),e?.DEFAULT_STATION_NAME&&(M=e.DEFAULT_STATION_NAME),e?.API_BASE_URL&&(dt=e.API_BASE_URL)}catch(t){const e=t instanceof Error?t:new Error(String(t));console.warn("Failed to load ./config.json:",e.message)}}async function jt(){await Kt();try{const t=localStorage.getItem(D);t&&(A=t)}catch{}}class Ft{constructor(e=500,o,n){if(this.maxEntries=e,this.ttlMs=o,this.persistKeyName=n,this.map=new Map,n&&typeof localStorage<"u")try{const i=localStorage.getItem(n);if(i){const a=JSON.parse(i);for(const r of Object.keys(a)){const s=a[r];(!s.expires||s.expires>Date.now())&&this.map.set(r,s)}}}catch(i){const a=i instanceof Error?i.message:String(i);console.warn(`Failed to restore cache from localStorage key "${n}":`,a)}}get(e){const o=this.map.get(e);if(o){if(o.expires&&o.expires<=Date.now()){this.map.delete(e);return}return this.map.delete(e),this.map.set(e,o),o.v}}set(e,o){const n=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(e)&&this.map.delete(e),this.map.set(e,{v:o,expires:n});this.map.size>this.maxEntries;){const i=this.map.keys().next().value;this.map.delete(i)}this.persistKeyName&&this.persist()}has(e){return typeof this.get(e)<"u"}persist(){if(this.persistKeyName)try{const e={};for(const[o,n]of this.map.entries())e[o]=n;localStorage.setItem(this.persistKeyName,JSON.stringify(e))}catch(e){const o=e instanceof Error?e.message:String(e);console.warn(`Failed to persist cache to localStorage key "${this.persistKeyName}":`,o)}}keys(){return Array.from(this.map.keys())}enablePersistence(e){this.persistKeyName=e,this.persist()}}let pt=[],Ht=null,h=null,E=null,P="渋谷・副都心線方面",$="横浜・元町中華街方面";const L={},k=new Map;let ft=[];const g=new Ft(500);function Jt(){return h||"odpt.RailDirection:Inbound"}function Yt(){return E||"odpt.RailDirection:Outbound"}function qt(){return P}function Wt(){return $}function Q(){return pt}function zt(t){pt=t}function m(){return ft}async function Gt(t,e){try{const o=await ht(t,e);for(const n of o){const i=n["owl:sameAs"]||n["@id"],a=b(n["dc:title"]);i&&typeof i=="string"&&k.set(i,a)}}catch(o){const n=o instanceof Error?o.message:String(o);console.warn("Failed to load direction names:",n)}}async function Vt(t,e){try{const o=await Et(t,e);for(const n of o){const i=n["owl:sameAs"]||n["@id"];if(!i||typeof i!="string")continue;const a=b(n["dc:title"]);if(!a)continue;const r=Dt(i);L[i]={name:a,class:r}}console.log(`Loaded ${Object.keys(L).length} train types`)}catch(o){const n=o instanceof Error?o.message:String(o);console.warn("Failed to load train types:",n)}}async function X(t,e,o){try{const n=await bt(t,e,o);if(!n){console.warn("Railway not found:",t);return}Ht=n,h=n["odpt:ascendingRailDirection"]||"odpt.RailDirection:Inbound",E=n["odpt:descendingRailDirection"]||"odpt.RailDirection:Outbound",h&&k.has(h)&&(P=k.get(h)||P),E&&k.has(E)&&($=k.get(E)||$);const i=b(n["dc:title"]||n["odpt:railwayTitle"]);xt(`${i} 発車案内板`)}catch(n){const i=n instanceof Error?n.message:String(n);console.warn("Failed to load railway metadata:",i)}}async function Z(t,e,o){try{ft=(await mt(e,o,t)).map(i=>{const a=b(i["dc:title"]||i["odpt:stationTitle"]),r=i["odpt:stationCode"]||"";return{name:r?`${a} (${r})`:a,uri:i["owl:sameAs"]||""}}).filter(i=>i.uri).sort((i,a)=>i.name.localeCompare(a.name,"ja"))}catch(n){const i=n instanceof Error?n.message:String(n);console.error("Error fetching station list:",i)}}async function Qt(t,e,...o){const n=kt(...o),i=Array.from(n).filter(a=>!g.has(a));if(i.length!==0)try{const a=await wt(i,t,e);for(const r of a){const s=r["owl:sameAs"]||r["@id"]||r.id,l=b(r["dc:title"]||r["odpt:stationTitle"]||r.title);s&&typeof s=="string"&&g.set(s,l)}for(const r of i)g.has(r)||g.set(r,r)}catch(a){const r=a instanceof Error?a.message:String(a);console.warn("Failed to fetch station names for destinations:",r)}}let d={railwayUri:null,stationUri:null,stationName:null},B,O;function p(){return d}function w(t){d=t}function Xt(){if(!f()){const n=document.getElementById("departures-inbound"),i=document.getElementById("departures-outbound"),a='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>';return n&&(n.innerHTML=a),i&&(i.innerHTML=a),null}const o=m().find(n=>n.uri===d.stationUri);if(!o||!d.railwayUri){const n=it("station-header");return n&&(n.textContent="エラー: 駅または路線が選択されていません"),null}return o}async function yt(t){const e=f();if(!e)return!1;let o=[];try{o=await Tt(t,e,S(),d.railwayUri)}catch(s){const l=s instanceof Error?s.message:String(s);return console.error("Failed to fetch timetable:",l),st("API エラーが発生しました。API キーを確認してください。","error"),rt(),!1}const i=et(nt(new Date)),a=K(o,Jt(),i),r=K(o,Yt(),i);return await Qt(e,S(),a,r),J("inbound",a,g,L),J("outbound",r,g,L),vt(),!0}async function Zt(){const t=f();if(t)try{d.railwayUri&&(await tt(t,S(),d.railwayUri),Bt())}catch(e){const o=e instanceof Error?e.message:String(e);console.warn("Failed to fetch status:",o),st("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}}function te(t){typeof B<"u"&&clearInterval(B),typeof O<"u"&&clearInterval(O),B=window.setInterval(async()=>{await yt(t)},Mt),O=window.setInterval(()=>{const e=f();d.railwayUri&&e&&tt(e,S(),d.railwayUri)},Pt),window.setInterval(q,$t),q()}async function I(){const t=Xt();!t||(It(t.name),Lt(),Rt(qt(),Wt()),!await yt(t.uri))||(await Zt(),te(t.uri))}async function R(){try{await jt()}catch(a){const r=a instanceof Error?a:new Error(String(a));console.warn("Error loading local config:",r.message)}if(Ot(),!f()){G(f(),a=>{a&&V(a),R()}),rt();return}const t=String(f()),e=S();await Gt(t,e),await Vt(t,e);try{const r=(await gt(t,e)).filter(s=>s["@type"]==="odpt:Railway").map(s=>{const l=b(s["dc:title"]||s["odpt:railwayTitle"]),c=s["odpt:operator"]||"";return{uri:s["owl:sameAs"]||s["@id"]||"",name:l,operator:c}}).filter(s=>s.uri&&s.name).sort((s,l)=>s.name.localeCompare(l.name,"ja"));zt(r)}catch(a){const r=a instanceof Error?a:new Error(String(a));console.error("Error fetching railway list:",r.message);const s=it("station-header");s&&(s.textContent="エラー: 路線リスト取得失敗")}const o=_t(Q(),ut);let n=p();o&&(n.railwayUri=o.uri,w(n),await X(o.uri,t,e)),Ut(Q(),n.railwayUri,async a=>{let r=p();r.railwayUri=a,w(r),await X(a,t,e),await Z(a,t,e);const s=W(m(),M);s&&(r=p(),r.stationUri=s.uri,r.stationName=s.name,w(r)),z(m(),p().stationUri,l=>{const c=m().find(u=>u.uri===l),T=p();T.stationUri=l,T.stationName=c?c.name:null,w(T),I()}),I()}),n.railwayUri&&await Z(n.railwayUri,t,e);const i=W(m(),M);i&&(n=p(),n.stationUri=i.uri,n.stationName=i.name,w(n)),G(f(),a=>{a&&V(a),R()}),z(m(),p().stationUri,a=>{const r=m().find(l=>l.uri===a),s=p();s.stationUri=a,s.stationName=r?r.name:null,w(s),I()}),I()}window.initializeBoard=R;window.onload=R;
