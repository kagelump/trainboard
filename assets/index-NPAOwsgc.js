(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&e(s)}).observe(document,{childList:!0,subtree:!0});function n(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(o){if(o.ep)return;o.ep=!0;const a=n(o);fetch(o.href,a)}})();async function w(t,i=3,n=1e3){for(let e=0;e<i;e++)try{const o=await fetch(t);if(!o.ok)throw new Error(`HTTP ${o.status}`);return o}catch(o){if(e===i-1)throw o;await new Promise(a=>setTimeout(a,n*2**e))}throw new Error("Unreachable")}async function rt(t,i,n){const e=new URLSearchParams({"acl:consumerKey":String(t)});n&&e.append("odpt:railway",n);const o=`${i}odpt:Station?${e.toString()}`;return await(await w(o)).json()}async function Y(t,i,n,e){const o=(()=>{const u=new Date().getDay();return u>=1&&u<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),a=new URLSearchParams({"acl:consumerKey":String(i),"odpt:railway":e,"odpt:station":t,"odpt:calendar":o}),s=`${n}odpt:StationTimetable?${a.toString()}`;return await(await w(s)).json()}async function z(t,i,n){const e=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":n}),o=`${i}odpt:TrainInformation?${e.toString()}`;return await(await w(o)).json()}async function ct(t,i,n){if(t.length===0)return[];const e=new URLSearchParams({"acl:consumerKey":String(i)});e.append("owl:sameAs",t.join(","));const o=`${n}odpt:Station?${e.toString()}`;return await(await w(o)).json()}async function lt(t,i){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${i}odpt:Railway?${n.toString()}`;return await(await w(e)).json()}async function dt(t,i,n){const e=new URLSearchParams({"acl:consumerKey":String(i)});e.append("owl:sameAs",t);const o=`${n}odpt:Railway?${e.toString()}`,s=await(await w(o)).json();return s.length>0?s[0]:null}async function ut(t,i){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${i}odpt:RailDirection?${n.toString()}`;return await(await w(e)).json()}async function ft(t,i){const n=new URLSearchParams({"acl:consumerKey":String(t)}),e=`${i}odpt:TrainType?${n.toString()}`;return await(await w(e)).json()}function S(t){if(!t)return"N/A";if(typeof t=="string")return t;const i=t;return i.ja||i.en||"N/A"}function P(t){const[i,n]=t.split(":").map(e=>Number(e));return i*60+n}function A(t,i,n,e=5){return(t.find(s=>s["odpt:railDirection"]===i)?.["odpt:stationTimetableObject"]??[]).filter(s=>typeof s["odpt:departureTime"]=="string").filter(s=>P(s["odpt:departureTime"])>=n).slice(0,e)}function mt(...t){const i=new Set;for(const n of t)for(const e of n??[]){const o=e["odpt:destinationStation"];if(o)if(Array.isArray(o)){for(const a of o)if(a){if(typeof a=="string")i.add(a);else if(typeof a=="object"){const s=a["owl:sameAs"]||a["@id"]||a.id;s&&typeof s=="string"&&i.add(s)}}}else typeof o=="string"&&i.add(o)}return i}function $(t=new Date){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}class pt{constructor(i=500,n,e){if(this.maxEntries=i,this.ttlMs=n,this.persistKeyName=e,this.map=new Map,e&&typeof localStorage<"u")try{const o=localStorage.getItem(e);if(o){const a=JSON.parse(o);for(const s of Object.keys(a)){const r=a[s];(!r.expires||r.expires>Date.now())&&this.map.set(s,r)}}}catch(o){console.warn(`Failed to restore cache from localStorage key "${e}":`,o)}}get(i){const n=this.map.get(i);if(n){if(n.expires&&n.expires<=Date.now()){this.map.delete(i);return}return this.map.delete(i),this.map.set(i,n),n.v}}set(i,n){const e=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(i)&&this.map.delete(i),this.map.set(i,{v:n,expires:e});this.map.size>this.maxEntries;){const o=this.map.keys().next().value;this.map.delete(o)}this.persistKeyName&&this.persist()}has(i){return typeof this.get(i)<"u"}persist(){if(this.persistKeyName)try{const i={};for(const[n,e]of this.map.entries())i[n]=e;localStorage.setItem(this.persistKeyName,JSON.stringify(i))}catch(i){console.warn(`Failed to persist cache to localStorage key "${this.persistKeyName}":`,i)}}keys(){return Array.from(this.map.keys())}enablePersistence(i){this.persistKeyName=i,this.persist()}}const ot="t2board_railway_uri",at="t2board_station_uri",C="t2board_api_key",yt=15e3;let G=!1,J=!1,W=!1;function wt(t){document.title=t}function H(t){const i=document.getElementById("station-header");i&&(i.textContent=t||"")}function gt(){const t=document.getElementById("departures-inbound"),i=document.getElementById("departures-outbound"),n='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=n),i&&(i.innerHTML=n)}function ht(t,i){const n=document.getElementById("direction-inbound-header"),e=document.getElementById("direction-outbound-header");n&&(n.textContent=t),e&&(e.textContent=i)}function L(t,i,n,e){const o=document.getElementById(`departures-${t}`);if(o){if(i.length===0){o.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}o.innerHTML=i.map(a=>{const s=a["odpt:departureTime"],r=a["odpt:trainType"]||"";let u="N/A";const d=a["odpt:destinationStation"];if(Array.isArray(d)&&d.length>0){const m=d[0];if(typeof m=="string")u=n.get(m)||m;else if(m&&typeof m=="object"&&(u=m["dc:title"]||m.title||"N/A",(!u||u==="N/A")&&m["owl:sameAs"])){const R=m["owl:sameAs"];typeof R=="string"&&(u=n.get(R)||R)}}else typeof d=="string"&&(u=n.get(d)||d);const I=e[r]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${s}">--</div>
          <div class="time-col text-center">${s}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${I.class}">${I.name}</span>
          </div>
          <div class="destination-text">${u}</div>
        </div>`}).join("")}}let b;function St(t){const[i,n]=(t||"").split(":"),e=Number(i||0),o=Number(n||0);return e*3600+o*60}function V(){const t=Array.from(document.querySelectorAll("[data-departure]")),i=new Date,n=i.getHours()*3600+i.getMinutes()*60+i.getSeconds();for(const e of t){const o=e.getAttribute("data-departure")||"",s=St(o)-n;if(s<=0)e.textContent="出発";else if(s<=60)e.textContent="到着";else{const r=Math.ceil(s/60);e.textContent=`${r}分`}}}function q(t=yt){V(),typeof b<"u"&&clearInterval(b),b=window.setInterval(V,t)}function X(){const t=document.getElementById("time-header");t&&(t.textContent=$())}function Q(t,i){const n=localStorage.getItem(at),e=t.find(a=>a.name===i)||t[0];let o=e;if(n){const a=t.find(s=>s.uri===n);a&&(o=a)}else t.length>0&&(o=e||t[0]);return o}function It(t,i){const n=localStorage.getItem(ot),e=t.find(a=>a.uri===i)||t[0];let o=e;if(n){const a=t.find(s=>s.uri===n);a&&(o=a)}else t.length>0&&(o=e||t[0]);return o}function Z(t,i,n){const e=document.getElementById("config-modal"),o=document.getElementById("station-select");if(!e||!o)return;function a(s){o.innerHTML=t.map(r=>`<option value="${r.uri}" ${r.uri===s?"selected":""}>${r.name}</option>`).join("")}a(i),J||(document.getElementById("settings-button")?.addEventListener("click",()=>{a(i),Tt()}),document.getElementById("close-modal")?.addEventListener("click",()=>{B()}),document.getElementById("save-settings")?.addEventListener("click",()=>{const d=o.value;localStorage.setItem(at,d),n(d),B()}),e.addEventListener("click",d=>{d.target===e&&B()}),J=!0)}function Et(t,i,n){const e=document.getElementById("railway-modal"),o=document.getElementById("railway-select");if(!e||!o)return;function a(s){o.innerHTML=t.map(r=>`<option value="${r.uri}" ${r.uri===s?"selected":""}>${r.name}</option>`).join("")}a(i),W||(document.getElementById("railway-button")?.addEventListener("click",()=>{a(i),At()}),document.getElementById("close-railway-modal")?.addEventListener("click",()=>{U()}),document.getElementById("save-railway")?.addEventListener("click",()=>{const d=o.value;localStorage.setItem(ot,d),n(d),U()}),e.addEventListener("click",d=>{d.target===e&&U()}),W=!0)}function tt(t,i){const n=document.getElementById("api-key-modal"),e=document.getElementById("api-key-input");if(!(!n||!e)&&(e.value=t||"",!G)){const o=document.getElementById("save-api-key"),a=document.getElementById("close-api-key");o?.addEventListener("click",()=>{const s=e.value?e.value.trim():null;s?localStorage.setItem(C,s):localStorage.removeItem(C),i(s),N()}),a?.addEventListener("click",()=>N()),n.addEventListener("click",s=>{s.target===n&&N()}),G=!0}}function Tt(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function B(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function At(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function U(){const t=document.getElementById("railway-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function j(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function N(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function D(t,i="info"){const n=document.getElementById("status-banner");n&&(n.classList.remove("hidden"),n.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),i==="error"?n.classList.add("bg-red-100","text-red-800"):i==="warn"?n.classList.add("bg-yellow-100"):n.classList.add("bg-blue-100"),n.textContent=t)}function Lt(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}let l=null,f="https://api-challenge.odpt.org/api/v4/",st="odpt.Railway:Tokyu.Toyoko";const vt=15e4,_t=3e5,Rt=1e3;let x=[],bt=null,g=null,h=null,F="渋谷・副都心線方面",K="横浜・元町中華街方面";const E={},T=new Map;let p=[],k="武蔵小杉 (TY11)",c={railwayUri:null,stationUri:null,stationName:null},M,O;const y=new pt(500);async function Bt(t,i){try{const n=await ut(t,i);for(const e of n){const o=e["owl:sameAs"]||e["@id"],a=S(e["dc:title"]);o&&typeof o=="string"&&T.set(o,a)}}catch(n){console.warn("Failed to load direction names:",n)}}async function Ut(t,i){try{const n=await ft(t,i);for(const e of n){const o=e["owl:sameAs"]||e["@id"],a=S(e["dc:title"]);if(o&&typeof o=="string"){let s="type-LOC";const r=a.toLowerCase();r.includes("特急")||r.includes("limited")?s=r.includes("通勤")?"type-CLE":"type-LE":r.includes("急行")||r.includes("express")?s=r.includes("通勤")?"type-CEXP":"type-EXP":r.includes("s-train")||r.includes("sトレイン")?s="type-STR":(r.includes("f-liner")||r.includes("fライナー"))&&(s="type-FLN"),E[o]={name:a,class:s}}}}catch(n){console.warn("Failed to load train types:",n)}}async function et(t,i,n){try{const e=await dt(t,i,n);if(!e){console.warn("Railway not found:",t);return}bt=e,g=e["odpt:ascendingRailDirection"]||"odpt.RailDirection:Inbound",h=e["odpt:descendingRailDirection"]||"odpt.RailDirection:Outbound",g&&T.has(g)&&(F=T.get(g)||F),h&&T.has(h)&&(K=T.get(h)||K);const o=S(e["dc:title"]||e["odpt:railwayTitle"]);wt(`${o} 発車案内板`)}catch(e){console.warn("Failed to load railway metadata:",e)}}function Nt(t){return document.getElementById(t)}async function nt(...t){if(!l)return;const i=mt(...t),n=Array.from(i).filter(e=>!y.has(e));if(n.length!==0)try{const e=await ct(n,String(l),f);for(const o of e){const a=o["owl:sameAs"]||o["@id"]||o.id,s=S(o["dc:title"]||o["odpt:stationTitle"]||o.title);a&&typeof a=="string"&&y.set(a,s)}for(const o of n)y.has(o)||y.set(o,o)}catch(e){console.warn("Failed to fetch station names for destinations:",e)}}async function v(){if(!l){const s=document.getElementById("departures-inbound"),r=document.getElementById("departures-outbound");s&&(s.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>'),r&&(r.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>');return}typeof M<"u"&&clearInterval(M),typeof O<"u"&&clearInterval(O);const t=p.find(s=>s.uri===c.stationUri);if(!t||!c.railwayUri){const s=Nt("station-header");s&&(s.textContent="エラー: 駅または路線が選択されていません");return}H(t.name),gt(),ht(F,K);let i=[];try{i=await Y(t.uri,String(l),f,c.railwayUri)}catch(s){console.error("Failed to fetch timetable:",s),D("API エラーが発生しました。API キーを確認してください。","error"),j();return}const e=P($(new Date)),o=A(i,g||"odpt.RailDirection:Inbound",e),a=A(i,h||"odpt.RailDirection:Outbound",e);await nt(o,a),L("inbound",o,y,E),L("outbound",a,y,E),q();try{c.railwayUri&&(await z(String(l),f,c.railwayUri),Lt())}catch(s){console.warn("Failed to fetch status:",s),D("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}M=window.setInterval(async()=>{let s=[];try{s=await Y(t.uri,String(l),f,c.railwayUri)}catch(m){console.error("Periodic timetable fetch failed:",m),D("定期更新の取得中にエラーが発生しました。API キーを確認してください。","warn"),j();return}const u=P($(new Date)),d=A(s,g||"odpt.RailDirection:Inbound",u),I=A(s,h||"odpt.RailDirection:Outbound",u);await nt(d,I),L("inbound",d,y,E),L("outbound",I,y,E),q()},vt),O=window.setInterval(()=>{c.railwayUri&&z(String(l),f,c.railwayUri)},_t),window.setInterval(X,Rt),X()}async function Dt(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const i=await t.json();i?.ODPT_API_KEY&&(l=i.ODPT_API_KEY),i?.DEFAULT_RAILWAY&&(st=i.DEFAULT_RAILWAY),i?.DEFAULT_STATION_NAME&&(k=i.DEFAULT_STATION_NAME),i?.API_BASE_URL&&(f=i.API_BASE_URL)}catch(t){console.warn("Failed to load ./config.json:",t)}}async function xt(){await Dt();try{const t=localStorage.getItem(C);t&&(l=t)}catch{}}async function _(){try{await xt()}catch(n){console.warn("Error loading local config:",n)}if(!l){tt(l,n=>{n&&(l=n),_()}),j();return}await Bt(String(l),f),await Ut(String(l),f);try{x=(await lt(String(l),f)).filter(e=>e["@type"]==="odpt:Railway").map(e=>{const o=S(e["dc:title"]||e["odpt:railwayTitle"]),a=e["odpt:operator"]||"";return{uri:e["owl:sameAs"]||e["@id"]||"",name:o,operator:a}}).filter(e=>e.uri&&e.name).sort((e,o)=>e.name.localeCompare(o.name,"ja"))}catch(n){console.error("Error fetching railway list:",n),H("エラー: 路線リスト取得失敗")}const t=It(x,st);t&&(c.railwayUri=t.uri,await et(t.uri,String(l),f)),Et(x,c.railwayUri,async n=>{c.railwayUri=n,await et(n,String(l),f),await it(n);const e=Q(p,k);e&&(c={...c,stationUri:e.uri,stationName:e.name}),Z(p,c.stationUri,o=>{const a=p.find(s=>s.uri===o);c={...c,stationUri:o,stationName:a?a.name:null},v()}),v()}),c.railwayUri&&await it(c.railwayUri);const i=Q(p,k);i&&(c={...c,stationUri:i.uri,stationName:i.name}),tt(l,n=>{n&&(l=n),_()}),Z(p,c.stationUri,n=>{const e=p.find(o=>o.uri===n);c={...c,stationUri:n,stationName:e?e.name:null},v()}),v()}async function it(t){try{p=(await rt(String(l),f,t)).map(n=>{const e=S(n["dc:title"]||n["odpt:stationTitle"]),o=n["odpt:stationCode"]||"";return{name:o?`${e} (${o})`:e,uri:n["owl:sameAs"]||""}}).filter(n=>n.uri).sort((n,e)=>n.name.localeCompare(e.name,"ja"))}catch(i){console.error("Error fetching station list:",i),H("エラー: 駅リスト取得失敗")}}window.initializeBoard=_;window.onload=_;
