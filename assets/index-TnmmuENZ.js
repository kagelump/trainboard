(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();async function E(e,t=3,n=1e3){for(let i=0;i<t;i++)try{const o=await fetch(e);if(!o.ok)throw new Error(`HTTP ${o.status}`);return o}catch(o){if(i===t-1)throw o;await new Promise(s=>setTimeout(s,n*2**i))}throw new Error("Unreachable")}async function R(e,t,n){const i=new URLSearchParams({"acl:consumerKey":String(e)});i.append("odpt:railway",n),i.append("odpt:operator","odpt.Operator:Tokyu");const o=`${t}odpt:Station?${i.toString()}`;return await(await E(o)).json()}async function O(e,t,n){const i=(()=>{const c=new Date().getDay();return c>=1&&c<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),o=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":"odpt.Railway:Tokyu.Toyoko","odpt:station":e,"odpt:calendar":i}),s=`${n}odpt:StationTimetable?${o.toString()}`;return await(await E(s)).json()}async function P(e,t){const n=new URLSearchParams({"acl:consumerKey":String(e),"odpt:railway":"odpt.Railway:Tokyu.Toyoko"}),i=`${t}odpt:TrainInformation?${n.toString()}`;return await(await E(i)).json()}async function k(e,t,n){if(e.length===0)return[];const i=new URLSearchParams({"acl:consumerKey":String(t)});i.append("owl:sameAs",e.join(","));const o=`${n}odpt:Station?${i.toString()}`;return await(await E(o)).json()}function H(e){if(!e)return"N/A";if(typeof e=="string")return e;const t=e;return t.ja||t.en||"N/A"}function A(e){const[t,n]=e.split(":").map(i=>Number(i));return t*60+n}function h(e,t,n,i=10){return(e.find(r=>r["odpt:railDirection"]===t)?.["odpt:stationTimetableObject"]??[]).filter(r=>typeof r["odpt:departureTime"]=="string").filter(r=>A(r["odpt:departureTime"])>=n).slice(0,i)}function K(...e){const t=new Set;for(const n of e)for(const i of n??[]){const o=i["odpt:destinationStation"];if(o)if(Array.isArray(o)){for(const s of o)if(s){if(typeof s=="string")t.add(s);else if(typeof s=="object"){const r=s["owl:sameAs"]||s["@id"]||s.id;r&&typeof r=="string"&&t.add(r)}}}else typeof o=="string"&&t.add(o)}return t}class Y{constructor(t=500,n,i){if(this.maxEntries=t,this.ttlMs=n,this.persistKeyName=i,this.map=new Map,i&&typeof localStorage<"u")try{const o=localStorage.getItem(i);if(o){const s=JSON.parse(o);for(const r of Object.keys(s)){const c=s[r];(!c.expires||c.expires>Date.now())&&this.map.set(r,c)}}}catch{}}get(t){const n=this.map.get(t);if(n){if(n.expires&&n.expires<=Date.now()){this.map.delete(t);return}return this.map.delete(t),this.map.set(t,n),n.v}}set(t,n){const i=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(t)&&this.map.delete(t),this.map.set(t,{v:n,expires:i});this.map.size>this.maxEntries;){const o=this.map.keys().next().value;this.map.delete(o)}this.persistKeyName&&this.persist()}has(t){return typeof this.get(t)<"u"}persist(){if(this.persistKeyName)try{const t={};for(const[n,i]of this.map.entries())t[n]=i;localStorage.setItem(this.persistKeyName,JSON.stringify(t))}catch{}}keys(){return Array.from(this.map.keys())}enablePersistence(t){this.persistKeyName=t,this.persist()}}function M(e){const t=document.getElementById("station-header");t&&(t.textContent=e||"")}function F(){const e=document.getElementById("departures-inbound"),t=document.getElementById("departures-outbound"),n='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';e&&(e.innerHTML=n),t&&(t.innerHTML=n)}function J(e,t){const n=document.getElementById("direction-inbound-header"),i=document.getElementById("direction-outbound-header");n&&(n.textContent=e),i&&(i.textContent=t)}function T(e,t,n,i){const o=document.getElementById(`departures-${e}`);if(o){if(t.length===0){o.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}o.innerHTML=t.map(s=>{const r=s["odpt:departureTime"],c=s["odpt:trainType"]||"";let l="N/A";const p=s["odpt:destinationStation"];if(Array.isArray(p)&&p.length>0){const a=p[0];if(typeof a=="string")l=n.get(a)||a;else if(a&&typeof a=="object"&&(l=a["dc:title"]||a.title||"N/A",(!l||l==="N/A")&&a["owl:sameAs"])){const u=a["owl:sameAs"];typeof u=="string"&&(l=n.get(u)||u)}}else typeof p=="string"&&(l=n.get(p)||p);const y=i[c]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row">
          <div class="time-col">${r}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${y.class}">${y.name}</span>
          </div>
          <div class="destination-text">${l}行き</div>
        </div>`}).join("")}}function N(){const e=document.getElementById("time-header");if(!e)return;const t=new Date;e.textContent=`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}function z(e,t){const n=localStorage.getItem("t2board_station_uri"),i=e.find(s=>s.name===t)||e[0];let o=i;if(n){const s=e.find(r=>r.uri===n);s&&(o=s)}else e.length>0&&(o=i||e[0]);return o}function X(e,t,n,i){const o=document.getElementById("config-modal"),s=document.getElementById("station-select"),r=document.getElementById("api-key-input");if(!o||!s||!r)return;function c(a){s.innerHTML=e.map(u=>`<option value="${u.uri}" ${u.uri===a?"selected":""}>${u.name}</option>`).join("")}c(t),r.value=n||"",document.getElementById("settings-button")?.addEventListener("click",()=>{c(t),r.value=n||"",v()}),document.getElementById("close-modal")?.addEventListener("click",()=>{b()}),document.getElementById("save-settings")?.addEventListener("click",()=>{const a=s.value,u=r.value?r.value.trim():null;localStorage.setItem("t2board_station_uri",a),u?localStorage.setItem("t2board_api_key",u):localStorage.removeItem("t2board_api_key"),i(a,u),b()}),o.addEventListener("click",a=>{a.target===o&&b()})}function v(){const e=document.getElementById("config-modal");e&&(e.classList.remove("hidden"),e.classList.add("flex","opacity-100"))}function b(){const e=document.getElementById("config-modal");e&&(e.classList.remove("flex","opacity-100"),e.classList.add("hidden"))}function L(e,t="info"){const n=document.getElementById("status-banner");n&&(n.classList.remove("hidden"),n.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),t==="error"?n.classList.add("bg-red-100","text-red-800"):t==="warn"?n.classList.add("bg-yellow-100"):n.classList.add("bg-blue-100"),n.textContent=e)}function G(){const e=document.getElementById("status-banner");e&&(e.classList.add("hidden"),e.textContent="")}let d=null,m="https://api-challenge.odpt.org/api/v4/";const q="odpt.Railway:Tokyu.Toyoko",B="odpt.RailDirection:Inbound",D="odpt.RailDirection:Outbound",W="渋谷・副都心線方面",Q="横浜・元町中華街方面",w={"odpt.TrainType:Tokyu.Local":{name:"各停",class:"type-LOC"},"odpt.TrainType:Tokyu.Express":{name:"急行",class:"type-EXP"},"odpt.TrainType:Tokyu.CommuterExpress":{name:"通勤急行",class:"type-CEXP"},"odpt.TrainType:Tokyu.LimitedExpress":{name:"特急",class:"type-LE"},"odpt.TrainType:Tokyu.CommuterLimitedExpress":{name:"通勤特急",class:"type-CLE"},"odpt.TrainType:Local":{name:"各停",class:"type-LOC"},"odpt.TrainType:Express":{name:"急行",class:"type-EXP"},"odpt.TrainType:LimitedExpress":{name:"特急",class:"type-LE"}};let g=[],$="武蔵小杉 (TY11)",I={stationUri:null},_,x;const f=new Y(500);function S(e){return document.getElementById(e)}async function U(...e){if(!d)return;const t=K(...e),n=Array.from(t).filter(i=>!f.has(i));if(n.length!==0)try{const i=await k(n,String(d),m);for(const o of i){const s=o["owl:sameAs"]||o["@id"]||o.id,r=H(o["dc:title"]||o["odpt:stationTitle"]||o.title);s&&typeof s=="string"&&f.set(s,r)}for(const o of n)f.has(o)||f.set(o,o)}catch(i){console.warn("Failed to fetch station names for destinations:",i)}}async function C(){if(!d){const r=document.getElementById("departures-inbound"),c=document.getElementById("departures-outbound");r&&(r.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>'),c&&(c.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>');return}typeof _<"u"&&clearInterval(_),typeof x<"u"&&clearInterval(x);const e=g.find(r=>r.uri===I.stationUri);if(!e){const r=S("station-header");r&&(r.textContent="エラー: 駅が選択されていません");return}M(e.name),F(),J(W,Q);let t=[];try{t=await O(e.uri,String(d),m)}catch(r){console.error("Failed to fetch timetable:",r),L("API エラーが発生しました。API キーを確認してください。","error"),v();return}const n=new Date,i=A(`${String(n.getHours()).padStart(2,"0")}:${String(n.getMinutes()).padStart(2,"0")}`),o=h(t,B,i),s=h(t,D,i);await U(o,s),T("inbound",o,f,w),T("outbound",s,f,w);try{await P(String(d),m),G()}catch(r){console.warn("Failed to fetch status:",r),L("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}_=window.setInterval(async()=>{let r=[];try{r=await O(e.uri,String(d),m)}catch(a){console.error("Periodic timetable fetch failed:",a),L("定期更新の取得中にエラーが発生しました。API キーを確認してください。","warn"),v();return}const c=new Date,l=A(`${String(c.getHours()).padStart(2,"0")}:${String(c.getMinutes()).padStart(2,"0")}`),p=h(r,B,l),y=h(r,D,l);await U(p,y),T("inbound",p,f,w),T("outbound",y,f,w)},15e4),x=window.setInterval(()=>P(String(d),m),3e5),window.setInterval(N,1e3),N()}async function V(){try{const e=await fetch("./config.json",{cache:"no-store"});if(!e.ok)return;const t=await e.json();t?.ODPT_API_KEY&&(d=t.ODPT_API_KEY),t?.DEFAULT_STATION_NAME&&($=t.DEFAULT_STATION_NAME),t?.API_BASE_URL&&(m=t.API_BASE_URL)}catch(e){console.warn("Failed to load ./config.json:",e)}try{const e=localStorage.getItem("t2board_api_key");e&&(d=e)}catch{}}async function j(){if(await V(),!d){const t=S("station-header");t&&(t.textContent="設定エラー: config.json に ODPT_API_KEY を設定してください");const n=S("departures-inbound"),i=S("departures-outbound");n&&(n.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>'),i&&(i.innerHTML='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>');return}try{g=(await R(String(d),m,q)).map(n=>{const i=n["dc:title"],o=n["odpt:stationCode"]||"";return{name:`${i} (${o})`,uri:n["owl:sameAs"]}}).sort((n,i)=>n.name.localeCompare(i.name,"ja"))}catch(t){console.error("Error fetching station list:",t),M("エラー: 駅リスト取得失敗")}const e=z(g,$);e&&(I={stationUri:e.uri,stationName:e.name}),X(g,I.stationUri,d,(t,n)=>{const i=g.find(o=>o.uri===t);I={stationUri:t,stationName:i?i.name:null},n&&(d=n),C()}),C()}window.initializeBoard=j;window.onload=j;
