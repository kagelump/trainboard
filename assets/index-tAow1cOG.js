(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const e of n)if(e.type==="childList")for(const u of e.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&a(u)}).observe(document,{childList:!0,subtree:!0});function i(n){const e={};return n.integrity&&(e.integrity=n.integrity),n.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?e.credentials="include":n.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function a(n){if(n.ep)return;n.ep=!0;const e=i(n);fetch(n.href,e)}})();async function h(t,o=3,i=1e3){for(let a=0;a<o;a++)try{const n=await fetch(t);if(!n.ok)throw new Error(`HTTP ${n.status}`);return n}catch(n){if(a===o-1)throw n;await new Promise(e=>setTimeout(e,i*2**a))}throw new Error("Unreachable")}async function Mt(t,o,i){if(!t||!o)throw new Error("API key and base URL are required");const a=new URLSearchParams({"acl:consumerKey":String(t)});i&&a.append("odpt:railway",i);const n=`${o}odpt:Station?${a.toString()}`;return await(await h(n)).json()}async function Lt(t,o,i,a){if(!o||!i||!t||!a)throw new Error("API key, base URL, station URI, and railway URI are required");const n=(()=>{const l=new Date().getDay();return l>=1&&l<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),e=new URLSearchParams({"acl:consumerKey":String(o),"odpt:railway":a,"odpt:station":t,"odpt:calendar":n}),u=`${i}odpt:StationTimetable?${e.toString()}`;return await(await h(u)).json()}async function tt(t,o,i){if(!t||!o||!i)throw new Error("API key, base URL, and railway URI are required");const a=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":i}),n=`${o}odpt:TrainInformation?${a.toString()}`;return await(await h(n)).json()}async function Ct(t,o,i){if(!o||!i)throw new Error("API key and base URL are required");if(t.length===0)return[];const a=new URLSearchParams({"acl:consumerKey":String(o)});a.append("owl:sameAs",t.join(","));const n=`${i}odpt:Station?${a.toString()}`;return await(await h(n)).json()}async function Nt(t,o){if(!t||!o)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),a=`${o}odpt:Railway?${i.toString()}`;return await(await h(a)).json()}async function Ot(t,o,i){if(!o||!i||!t)throw new Error("API key, base URL, and railway URI are required");const a=new URLSearchParams({"acl:consumerKey":String(o)});a.append("owl:sameAs",t);const n=`${i}odpt:Railway?${a.toString()}`,u=await(await h(n)).json();return u.length>0?u[0]:null}async function Ut(t,o){if(!t||!o)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),a=`${o}odpt:RailDirection?${i.toString()}`;return await(await h(a)).json()}async function vt(t,o){if(!t||!o)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),a=`${o}odpt:TrainType?${i.toString()}`;return await(await h(a)).json()}function O(t){if(!t)return"N/A";if(typeof t=="string")return t;const o=t;return o.ja||o.en||"N/A"}function mt(t){const[o,i]=t.split(":").map(a=>Number(a));return o*60+i}function ut(t,o,i,a=5){return(t.find(u=>u["odpt:railDirection"]===o)?.["odpt:stationTimetableObject"]??[]).filter(u=>typeof u["odpt:departureTime"]=="string").filter(u=>mt(u["odpt:departureTime"])>=i).slice(0,a)}function _t(...t){const o=new Set;for(const i of t)for(const a of i??[]){const n=a["odpt:destinationStation"];if(n)if(Array.isArray(n)){for(const e of n)if(e){if(typeof e=="string")o.add(e);else if(typeof e=="object"){const u=e["owl:sameAs"]||e["@id"]||e.id;u&&typeof u=="string"&&o.add(u)}}}else typeof n=="string"&&o.add(n)}return o}function ft(t=new Date){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}function kt(t){return document.getElementById(t)}class Bt{constructor(o=500,i,a){if(this.maxEntries=o,this.ttlMs=i,this.persistKeyName=a,this.map=new Map,a&&typeof localStorage<"u")try{const n=localStorage.getItem(a);if(n){const e=JSON.parse(n);for(const u of Object.keys(e)){const d=e[u];(!d.expires||d.expires>Date.now())&&this.map.set(u,d)}}}catch(n){const e=n instanceof Error?n.message:String(n);console.warn(`Failed to restore cache from localStorage key "${a}":`,e)}}get(o){const i=this.map.get(o);if(i){if(i.expires&&i.expires<=Date.now()){this.map.delete(o);return}return this.map.delete(o),this.map.set(o,i),i.v}}set(o,i){const a=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(o)&&this.map.delete(o),this.map.set(o,{v:i,expires:a});this.map.size>this.maxEntries;){const n=this.map.keys().next().value;this.map.delete(n)}this.persistKeyName&&this.persist()}has(o){return typeof this.get(o)<"u"}persist(){if(this.persistKeyName)try{const o={};for(const[i,a]of this.map.entries())o[i]=a;localStorage.setItem(this.persistKeyName,JSON.stringify(o))}catch(o){const i=o instanceof Error?o.message:String(o);console.warn(`Failed to persist cache to localStorage key "${this.persistKeyName}":`,i)}}keys(){return Array.from(this.map.keys())}enablePersistence(o){this.persistKeyName=o,this.persist()}}const Tt={"odpt.TrainType:Sotetsu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Sotetsu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Sotetsu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Sotetsu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Sotetsu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Sotetsu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Odakyu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Odakyu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Odakyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Odakyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Odakyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Odakyu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Odakyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Keikyu.AccessExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.AirportRapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Keikyu.EveningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Keikyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Keikyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Keikyu.MorningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.RapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Seibu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Seibu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Seibu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.HaijimaLiner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Seibu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Seibu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Seibu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tokyu.CommuterLimitedExpress":{outline:"yellow",text:"red",fill:"white"},"odpt.TrainType:Tokyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tokyu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.LimitedExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tokyu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.KawagoeLimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tobu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Tobu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Tobu.SL-Taiju":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.SectionExpress":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.SectionSemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.TH-LINER":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.TJ-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.ChuoSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.CommuterRapid":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:JR-East.CommuterSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:JR-East.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:JR-East.Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:JR-East.OmeSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:JR-East.SpecialRapid":{outline:"black",text:"yellow",fill:"red"}};function Ht(){if(document.getElementById("train-type-dynamic-styles"))return;const t=document.createElement("style");t.id="train-type-dynamic-styles";let o="";for(const[i,a]of Object.entries(Tt)){const n=ht(i);o+=`
.${n} {
  background-color: ${a.fill};
  color: ${a.text};
  border: 2px solid ${a.outline};
}
`}t.textContent=o,document.head.appendChild(t)}function ht(t){return"train-type-"+t.replace(/[:.]/g,"-")}function Yt(t){return t in Tt?ht(t):"type-LOC"}const Dt={"odpt.Railway:Odakyu.Odawara":{inbound:"新宿",outbound:"小田原"},"odpt.Railway:Keikyu.Main":{inbound:"品川",outbound:"浦賀"},"odpt.Railway:Tobu.Nikko":{inbound:"浅草",outbound:"東武日光"},"odpt.Railway:Tobu.TobuSkytree":{inbound:"浅草",outbound:"東武動物公園"},"odpt.Railway:JR-East.ChuoSobuLocal":{inbound:"三鷹",outbound:"千葉"},"odpt.Railway:Fujikyu.Fujikyu":{inbound:"大月",outbound:"河口湖"},"odpt.Railway:Keikyu.Airport":{inbound:"品川",outbound:"羽田空港"},"odpt.Railway:Keikyu.Daishi":{inbound:"京急川崎",outbound:"小島新田"},"odpt.Railway:Tokyu.DenEnToshi":{inbound:"渋谷",outbound:"中央林間"},"odpt.Railway:Tokyu.Ikegami":{inbound:"五反田",outbound:"蒲田"},"odpt.Railway:Tobu.Daishi":{inbound:"西新井",outbound:"大師前"},"odpt.Railway:Tobu.Isesaki":{inbound:"東武動物公園",outbound:"伊勢崎"},"odpt.Railway:Tobu.Kiryu":{inbound:"太田",outbound:"赤城"},"odpt.Railway:ChibaMonorail.Line2":{inbound:"千葉",outbound:"千城台"},"odpt.Railway:JR-East.Chuo":{inbound:"東京",outbound:"高尾"},"odpt.Railway:JR-East.Joban":{inbound:"上野",outbound:"水戸"},"odpt.Railway:Seibu.Toshima":{inbound:"練馬",outbound:"豊島園"},"odpt.Railway:Sotetsu.Izumino":{inbound:"二俣川",outbound:"湘南台"},"odpt.Railway:Sotetsu.Main":{inbound:"横浜",outbound:"海老名"},"odpt.Railway:Sotetsu.SotetsuShinYokohama":{inbound:"新横浜",outbound:"西谷"},"odpt.Railway:JR-Central.TokaidoShinkansen":{inbound:"東京",outbound:"新大阪"},"odpt.Railway:Odakyu.Enoshima":{inbound:"相模大野",outbound:"片瀬江ノ島"},"odpt.Railway:Odakyu.Tama":{inbound:"新百合ヶ丘",outbound:"唐木田"},"odpt.Railway:Keikyu.Kurihama":{inbound:"堀ノ内",outbound:"三崎口"},"odpt.Railway:Tokyu.Setagaya":{inbound:"三軒茶屋",outbound:"下高井戸"},"odpt.Railway:Keikyu.Zushi":{inbound:"金沢八景",outbound:"逗子・葉山"},"odpt.Railway:Seibu.Haijima":{inbound:"西武新宿",outbound:"拝島"},"odpt.Railway:Seibu.Ikebukuro":{inbound:"池袋",outbound:"飯能"},"odpt.Railway:Chichibu.Chichibu":{inbound:"羽生",outbound:"三峰口"},"odpt.Railway:Seibu.Kokubunji":{inbound:"国分寺",outbound:"東村山"},"odpt.Railway:Seibu.Sayama":{inbound:"西所沢",outbound:"西武球場前"},"odpt.Railway:Isumi.Isumi":{inbound:"大原",outbound:"上総中野"},"odpt.Railway:Seibu.SeibuChichibu":{inbound:"吾野",outbound:"西武秩父"},"odpt.Railway:Seibu.SeibuYurakucho":{inbound:"練馬",outbound:"小竹向原"},"odpt.Railway:Seibu.Seibuen":{inbound:"東村山",outbound:"西武園"},"odpt.Railway:Seibu.Shinjuku":{inbound:"西武新宿",outbound:"本川越"},"odpt.Railway:Seibu.Tamagawa":{inbound:"武蔵境",outbound:"是政"},"odpt.Railway:Seibu.Tamako":{inbound:"国分寺",outbound:"西武遊園地"},"odpt.Railway:Seibu.Yamaguchi":{inbound:"西武球場前",outbound:"西武遊園地"},"odpt.Railway:Tokyu.Kodomonokuni":{inbound:"長津田",outbound:"こどもの国"},"odpt.Railway:Tokyu.Meguro":{inbound:"目黒",outbound:"日吉"},"odpt.Railway:Tokyu.Oimachi":{inbound:"大井町",outbound:"溝の口"},"odpt.Railway:Tokyu.TokyuShinYokohama":{inbound:"新横浜",outbound:"西谷"},"odpt.Railway:JR-Central.Gotemba":{inbound:"国府津",outbound:"沼津"},"odpt.Railway:JR-Central.Minobu":{inbound:"富士",outbound:"甲府"},"odpt.Railway:Tokyu.TokyuTamagawa":{inbound:"多摩川",outbound:"蒲田"},"odpt.Railway:Choshi.Choshi":{inbound:"銚子",outbound:"外川"},"odpt.Railway:Tokyu.Toyoko":{inbound:"渋谷",outbound:"横浜"},"odpt.Railway:Tobu.Kameido":{inbound:"曳舟",outbound:"亀戸"},"odpt.Railway:Tobu.Kinugawa":{inbound:"下今市",outbound:"新藤原"},"odpt.Railway:IzuHakone.Sunzu":{inbound:"三島",outbound:"修善寺"},"odpt.Railway:Tobu.KoizumiBranch":{inbound:"館林",outbound:"西小泉"},"odpt.Railway:Tobu.Koizumi":{inbound:"太田",outbound:"西小泉"},"odpt.Railway:Enoden.Enoden":{inbound:"鎌倉",outbound:"藤沢"},"odpt.Railway:Tobu.Ogose":{inbound:"坂戸",outbound:"越生"},"odpt.Railway:Tobu.Sano":{inbound:"館林",outbound:"葛生"},"odpt.Railway:Izukyu.Izukyu":{inbound:"伊東",outbound:"伊豆急下田"},"odpt.Railway:JR-Central.Chuo":{inbound:"名古屋",outbound:"中津川"},"odpt.Railway:Tobu.TobuSkytreeBranch":{inbound:"曳舟",outbound:"亀戸"},"odpt.Railway:Tobu.TobuUrbanPark":{inbound:"大宮",outbound:"船橋"},"odpt.Railway:Tobu.Tojo":{inbound:"池袋",outbound:"寄居"},"odpt.Railway:Tobu.Utsunomiya":{inbound:"新栃木",outbound:"東武宇都宮"},"odpt.Railway:Aizu.Aizu":{inbound:"西若松",outbound:"会津高原"},"odpt.Railway:ChibaMonorail.Line1":{inbound:"千葉みなと",outbound:"県庁前"},"odpt.Railway:Hitachinaka.Minato":{inbound:"勝田",outbound:"阿字ヶ浦"},"odpt.Railway:Hokuetsu.Hokuhoku":{inbound:"六日町",outbound:"犀潟"},"odpt.Railway:Hokuso.Hokuso":{inbound:"京成高砂",outbound:"印旛日本医大"},"odpt.Railway:IzuHakone.Daiyuzan":{inbound:"小田原",outbound:"大雄山"},"odpt.Railway:JR-Central.Tokaido":{inbound:"東京",outbound:"熱海"},"odpt.Railway:JR-East.AkitaShinkansen":{inbound:"東京",outbound:"秋田"},"odpt.Railway:JR-East.Aterazawa":{inbound:"山形",outbound:"左沢"},"odpt.Railway:JR-East.BanetsuEast":{inbound:"郡山",outbound:"いわき"},"odpt.Railway:JR-East.BanetsuWest":{inbound:"郡山",outbound:"新潟"},"odpt.Railway:JR-East.Kitakami":{inbound:"北上",outbound:"横手"},"odpt.Railway:JR-East.ChuoTatsunoBranch":{inbound:"岡谷",outbound:"辰野"},"odpt.Railway:JR-East.Echigo":{inbound:"新潟",outbound:"柏崎"},"odpt.Railway:JR-East.Gono":{inbound:"東能代",outbound:"川部"},"odpt.Railway:JR-East.Hachinohe":{inbound:"八戸",outbound:"久慈"},"odpt.Railway:JR-East.Hakushin":{inbound:"新潟",outbound:"新発田"},"odpt.Railway:JR-East.Hanawa":{inbound:"大館",outbound:"好摩"},"odpt.Railway:JR-East.HokurikuShinkansen":{inbound:"東京",outbound:"金沢"},"odpt.Railway:JR-East.Iiyama":{inbound:"豊野",outbound:"越後川口"},"odpt.Railway:JR-East.Ishinomaki":{inbound:"小牛田",outbound:"女川"},"odpt.Railway:JR-East.JoetsuShinkansen":{inbound:"東京",outbound:"新潟"},"odpt.Railway:JR-East.Kamaishi":{inbound:"花巻",outbound:"釜石"},"odpt.Railway:JR-East.Karasuyama":{inbound:"宝積寺",outbound:"烏山"},"odpt.Railway:JR-East.Kesennuma":{inbound:"前谷地",outbound:"気仙沼"},"odpt.Railway:JR-East.Koumi":{inbound:"小淵沢",outbound:"小諸"},"odpt.Railway:JR-East.Mito":{inbound:"小山",outbound:"水戸"},"odpt.Railway:JR-East.Nikko":{inbound:"宇都宮",outbound:"日光"},"odpt.Railway:JR-East.Ofunato":{inbound:"一ノ関",outbound:"盛"},"odpt.Railway:JR-East.Oga":{inbound:"追分",outbound:"男鹿"},"odpt.Railway:JR-East.Oito":{inbound:"松本",outbound:"南小谷"},"odpt.Railway:JR-East.Ominato":{inbound:"野辺地",outbound:"大湊"},"odpt.Railway:JR-East.OuYamagata":{inbound:"福島",outbound:"新庄"},"odpt.Railway:JR-East.Ou":{inbound:"福島",outbound:"青森"},"odpt.Railway:JR-East.RikuEast":{inbound:"小牛田",outbound:"新庄"},"odpt.Railway:JR-East.RikuWest":{inbound:"新庄",outbound:"余目"},"odpt.Railway:JR-East.Ryomo":{inbound:"小山",outbound:"新前橋"},"odpt.Railway:JR-East.SensekiTohoku":{inbound:"仙台",outbound:"石巻"},"odpt.Railway:JR-East.Senseki":{inbound:"仙台",outbound:"石巻"},"odpt.Railway:JR-East.Senzan":{inbound:"仙台",outbound:"羽前千歳"},"odpt.Railway:JR-East.Shinetsu":{inbound:"高崎",outbound:"新潟"},"odpt.Railway:JR-East.Shinonoi":{inbound:"塩尻",outbound:"篠ノ井"},"odpt.Railway:JR-East.SuigunBranch":{inbound:"郡山",outbound:"水戸"},"odpt.Railway:JR-East.Suigun":{inbound:"水戸",outbound:"郡山"},"odpt.Railway:JR-East.Tadami":{inbound:"会津若松",outbound:"小出"},"odpt.Railway:JR-East.Tazawako":{inbound:"盛岡",outbound:"大曲"},"odpt.Railway:JR-East.TohokuShinkansen":{inbound:"東京",outbound:"新青森"},"odpt.Railway:JR-East.Tohoku":{inbound:"東京",outbound:"一ノ関"},"odpt.Railway:JR-East.Tsugaru":{inbound:"青森",outbound:"三厩"},"odpt.Railway:JR-East.Uetsu":{inbound:"新津",outbound:"秋田"},"odpt.Railway:JR-East.Yahiko":{inbound:"東三条",outbound:"弥彦"},"odpt.Railway:JR-East.Yamada":{inbound:"盛岡",outbound:"宮古"},"odpt.Railway:JR-East.YamagataShinkansen":{inbound:"東京",outbound:"新庄"},"odpt.Railway:JR-East.Yonesaka":{inbound:"米沢",outbound:"坂町"},"odpt.Railway:JR-Shikoku.SetoOhashi":{inbound:"岡山",outbound:"高松"},"odpt.Railway:JR-West.Sanin":{inbound:"京都",outbound:"幡生"},"odpt.Railway:Jomo.Jomo":{inbound:"高崎",outbound:"西桐生"},"odpt.Railway:Joshin.Joshin":{inbound:"高崎",outbound:"下仁田"},"odpt.Railway:KantoRailway.Ryugasaki":{inbound:"佐貫",outbound:"竜ヶ崎"},"odpt.Railway:KashimaRinkai.OaraiKashima":{inbound:"水戸",outbound:"鹿島神宮"},"odpt.Railway:Keisei.Chiba":{inbound:"京成津田沼",outbound:"千葉中央"},"odpt.Railway:Keisei.HigashiNarita":{inbound:"京成成田",outbound:"東成田"},"odpt.Railway:Keisei.Kanamachi":{inbound:"京成高砂",outbound:"金町"},"odpt.Railway:Keisei.Main":{inbound:"京成上野",outbound:"成田空港"},"odpt.Railway:Keisei.NaritaSkyAccess":{inbound:"京成上野",outbound:"成田空港"},"odpt.Railway:Keisei.Oshiage":{inbound:"押上",outbound:"京成高砂"},"odpt.Railway:Kominato.Kominato":{inbound:"五井",outbound:"上総中野"},"odpt.Railway:TokyoMetro.Hanzomon":{inbound:"渋谷",outbound:"押上"},"odpt.Railway:MIR.TsukubaExpress":{inbound:"秋葉原",outbound:"つくば"},"odpt.Railway:MaihamaResort.DisneyResort":{inbound:"リゾートゲートウェイ",outbound:"東京ディズニーランド"},"odpt.Railway:Minatomirai.Minatomirai":{inbound:"横浜",outbound:"元町・中華街"},"odpt.Railway:OdakyuHakone.HakoneTozan":{inbound:"小田原",outbound:"強羅"},"odpt.Railway:Ryutetsu.Nagareyama":{inbound:"馬橋",outbound:"流山"},"odpt.Railway:SaitamaRailway.SaitamaRailway":{inbound:"赤羽岩淵",outbound:"浦和美園"},"odpt.Railway:SaitamaTransit.NewShuttle":{inbound:"大宮",outbound:"内宿"},"odpt.Railway:SendaiAirportTransit.SendaiAirport":{inbound:"仙台",outbound:"仙台空港"},"odpt.Railway:SendaiMunicipal.Namboku":{inbound:"泉中央",outbound:"富沢"},"odpt.Railway:SendaiMunicipal.Tozai":{inbound:"八木山動物公園",outbound:"荒井"},"odpt.Railway:Shibayama.Shibayama":{inbound:"東成田",outbound:"芝山千代田"},"odpt.Railway:ShinKeisei.ShinKeisei":{inbound:"松戸",outbound:"京成津田沼"},"odpt.Railway:ShonanMonorail.ShonanMonorail":{inbound:"大船",outbound:"湘南江の島"},"odpt.Railway:TWR.Rinkai":{inbound:"大崎",outbound:"新木場"},"odpt.Railway:TamaMonorail.TamaMonorail":{inbound:"上北台",outbound:"多摩センター"},"odpt.Railway:Toei.Arakawa":{inbound:"早稲田",outbound:"三ノ輪橋"},"odpt.Railway:Toei.Asakusa":{inbound:"西馬込",outbound:"押上"},"odpt.Railway:Toei.Mita":{inbound:"目黒",outbound:"西高島平"},"odpt.Railway:Toei.NipporiToneri":{inbound:"日暮里",outbound:"見沼代親水公園"},"odpt.Railway:Toei.Oedo":{inbound:"光が丘",outbound:"大門"},"odpt.Railway:Toei.Shinjuku":{inbound:"新宿",outbound:"本八幡"},"odpt.Railway:TokyoMetro.Chiyoda":{inbound:"代々木上原",outbound:"取手"},"odpt.Railway:TokyoMetro.Fukutoshin":{inbound:"渋谷",outbound:"和光市"},"odpt.Railway:TokyoMetro.Ginza":{inbound:"渋谷",outbound:"浅草"},"odpt.Railway:TokyoMetro.Hibiya":{inbound:"中目黒",outbound:"北千住"},"odpt.Railway:TokyoMetro.Marunouchi":{inbound:"荻窪",outbound:"池袋"},"odpt.Railway:TokyoMetro.Namboku":{inbound:"目黒",outbound:"赤羽岩淵"},"odpt.Railway:TokyoMetro.Tozai":{inbound:"中野",outbound:"西船橋"},"odpt.Railway:TokyoMetro.Yurakucho":{inbound:"新木場",outbound:"和光市"},"odpt.Railway:TokyoMonorail.HanedaAirport":{inbound:"浜松町",outbound:"羽田空港"},"odpt.Railway:UtsunomiyaLightRail.UtsunomiyaLightRail":{inbound:"宇都宮駅東口",outbound:"芳賀・高根沢工業団地"},"odpt.Railway:WataraseKeikoku.WataraseKeikoku":{inbound:"桐生",outbound:"間藤"},"odpt.Railway:Yagan.AizuKinugawa":{inbound:"新藤原",outbound:"会津高原"},"odpt.Railway:YokohamaMunicipal.Blue":{inbound:"湘南台",outbound:"あざみ野"},"odpt.Railway:YokohamaMunicipal.Green":{inbound:"中山",outbound:"日吉"},"odpt.Railway:YokohamaSeaside.KanazawaSeaside":{inbound:"新杉田",outbound:"金沢八景"},"odpt.Railway:Yurikamome.Yurikamome":{inbound:"新橋",outbound:"豊洲"},"odpt.Railway:Keio.Inokashira":{inbound:"渋谷",outbound:"吉祥寺"},"odpt.Railway:Keio.KeioNew":{inbound:"新宿",outbound:"笹塚"},"odpt.Railway:Keio.Keio":{inbound:"新宿",outbound:"京王八王子"},"odpt.Railway:Keio.Sagamihara":{inbound:"調布",outbound:"橋本"},"odpt.Railway:KantoRailway.Joso":{inbound:"取手",outbound:"下館"},"odpt.Railway:Keio.Takao":{inbound:"北野",outbound:"高尾山口"},"odpt.Railway:ToyoRapid.ToyoRapid":{inbound:"西船橋",outbound:"東葉勝田台"},"odpt.Railway:JR-East.Agatsuma":{inbound:"渋川",outbound:"大前"},"odpt.Railway:JR-East.ChuoRapid":{inbound:"東京",outbound:"高尾"},"odpt.Railway:JR-East.Hachiko":{inbound:"八王子",outbound:"高崎"},"odpt.Railway:JR-East.Ito":{inbound:"熱海",outbound:"伊東"},"odpt.Railway:JR-East.Kawagoe":{inbound:"大宮",outbound:"高麗川"},"odpt.Railway:JR-East.Itsukaichi":{inbound:"拝島",outbound:"武蔵五日市"},"odpt.Railway:JR-East.JobanLocal":{inbound:"代々木上原",outbound:"取手"},"odpt.Railway:JR-East.JobanRapid":{inbound:"上野",outbound:"取手"},"odpt.Railway:JR-East.Joetsu":{inbound:"高崎",outbound:"長岡"},"odpt.Railway:JR-East.Kashima":{inbound:"香取",outbound:"鹿島神宮"},"odpt.Railway:JR-East.KeihinTohokuNegishi":{inbound:"大宮",outbound:"大船"},"odpt.Railway:JR-East.Keiyo":{inbound:"東京",outbound:"蘇我"},"odpt.Railway:JR-East.Kururi":{inbound:"木更津",outbound:"上総亀山"},"odpt.Railway:JR-East.Narita":{inbound:"佐倉",outbound:"銚子"},"odpt.Railway:JR-East.Musashino":{inbound:"府中本町",outbound:"西船橋"},"odpt.Railway:JR-East.NambuBranch":{inbound:"尻手",outbound:"浜川崎"},"odpt.Railway:JR-East.Nambu":{inbound:"川崎",outbound:"立川"},"odpt.Railway:JR-East.NaritaAbikoBranch":{inbound:"我孫子",outbound:"成田"},"odpt.Railway:JR-East.NaritaAirportBranch":{inbound:"成田",outbound:"成田空港"},"odpt.Railway:JR-East.Ome":{inbound:"立川",outbound:"奥多摩"},"odpt.Railway:JR-East.Sagami":{inbound:"茅ヶ崎",outbound:"橋本"},"odpt.Railway:JR-East.SaikyoKawagoe":{inbound:"大崎",outbound:"川越"},"odpt.Railway:JR-East.ShonanShinjuku":{inbound:"大宮",outbound:"大船"},"odpt.Railway:JR-East.SobuRapid":{inbound:"東京",outbound:"千葉"},"odpt.Railway:JR-East.Sobu":{inbound:"千葉",outbound:"銚子"},"odpt.Railway:JR-East.SotetsuDirect":{inbound:"新宿",outbound:"海老名"},"odpt.Railway:JR-East.Sotobo":{inbound:"千葉",outbound:"安房鴨川"},"odpt.Railway:JR-East.Takasaki":{inbound:"上野",outbound:"高崎"},"odpt.Railway:JR-East.Togane":{inbound:"成東",outbound:"大網"},"odpt.Railway:JR-East.Tokaido":{inbound:"東京",outbound:"熱海"},"odpt.Railway:JR-East.TsurumiOkawaBranch":{inbound:"浅野",outbound:"大川"},"odpt.Railway:JR-East.TsurumiUmiShibauraBranch":{inbound:"浅野",outbound:"海芝浦"},"odpt.Railway:JR-East.Tsurumi":{inbound:"鶴見",outbound:"扇町"},"odpt.Railway:JR-East.Uchibo":{inbound:"蘇我",outbound:"安房鴨川"},"odpt.Railway:JR-East.Utsunomiya":{inbound:"上野",outbound:"黒磯"},"odpt.Railway:JR-East.Yamanote":{inbound:"内回り",outbound:"外回り"},"odpt.Railway:JR-East.Yokohama":{inbound:"東神奈川",outbound:"八王子"},"odpt.Railway:JR-East.Yokosuka":{inbound:"東京",outbound:"久里浜"}};let Et=[],x=null,_=null,B=null,ot="渋谷・副都心線方面",at="横浜・元町中華街方面";const M=Dt,D={},H=new Map;let St=[];const A=new Bt(500);function Pt(){return _||"odpt.RailDirection:Inbound"}function jt(){return B||"odpt.RailDirection:Outbound"}function $t(){try{const t=x?x["owl:sameAs"]||x["@id"]:null;if(t&&M[t]&&M[t].inbound)return M[t].inbound}catch{}return ot}function zt(){try{const t=x?x["owl:sameAs"]||x["@id"]:null;if(t&&M[t]&&M[t].outbound)return M[t].outbound}catch{}return at}function dt(){return Et}function Ft(t){Et=t}function K(){return St}async function Wt(t,o){try{const i=await Ut(t,o);for(const a of i){const n=a["owl:sameAs"]||a["@id"],e=O(a["dc:title"]);n&&typeof n=="string"&&H.set(n,e)}}catch(i){const a=i instanceof Error?i.message:String(i);console.warn("Failed to load direction names:",a)}}async function Gt(t,o){try{const i=await vt(t,o);for(const a of i){const n=a["owl:sameAs"]||a["@id"];if(!n||typeof n!="string")continue;const e=O(a["dc:title"]);if(!e)continue;const u=Yt(n);D[n]={name:e,class:u}}console.log(`Loaded ${Object.keys(D).length} train types`)}catch(i){const a=i instanceof Error?i.message:String(i);console.warn("Failed to load train types:",a)}}async function lt(t,o,i){try{const a=await Ot(t,o,i);if(!a){console.warn("Railway not found:",t);return}x=a,_=a["odpt:descendingRailDirection"]||"odpt.RailDirection:Inbound",B=a["odpt:ascendingRailDirection"]||"odpt.RailDirection:Outbound",_&&H.has(_)&&(ot=H.get(_)||ot),B&&H.has(B)&&(at=H.get(B)||at);const n=O(a["dc:title"]||a["odpt:railwayTitle"]);Xt(`${n} 発車案内板`)}catch(a){const n=a instanceof Error?a.message:String(a);console.warn("Failed to load railway metadata:",n)}}async function F(t,o,i){try{St=(await Mt(o,i,t)).map(n=>{const e=O(n["dc:title"]||n["odpt:stationTitle"]),u=n["odpt:stationCode"]||"";return{name:u?`${e} (${u})`:e,uri:n["owl:sameAs"]||"",code:u}}).filter(n=>n.uri).sort((n,e)=>{if(n.code&&e.code){const u=n.code.match(/\d+/),d=e.code.match(/\d+/);if(u&&d){const l=parseInt(u[0],10),s=parseInt(d[0],10);if(l!==s)return l-s}return n.code.localeCompare(e.code)}return n.name.localeCompare(e.name,"ja")})}catch(a){const n=a instanceof Error?a.message:String(a);console.error("Error fetching station list:",n)}}async function qt(t,o,...i){const a=_t(...i),n=Array.from(a).filter(e=>!A.has(e));if(n.length!==0)try{const e=await Ct(n,t,o);for(const u of e){const d=u["owl:sameAs"]||u["@id"]||u.id,l=O(u["dc:title"]||u["odpt:stationTitle"]||u.title);d&&typeof d=="string"&&A.set(d,l)}for(const u of n)A.has(u)||A.set(u,u)}catch(e){const u=e instanceof Error?e.message:String(e);console.warn("Failed to fetch station names for destinations:",u)}}const W={東京都:["odpt.Railway:Odakyu.Odawara","odpt.Railway:Keikyu.Main","odpt.Railway:Tobu.TobuSkytree","odpt.Railway:JR-East.ChuoSobuLocal","odpt.Railway:Keikyu.Airport","odpt.Railway:Tokyu.DenEnToshi","odpt.Railway:Tokyu.Ikegami","odpt.Railway:Tobu.Daishi","odpt.Railway:JR-East.Chuo","odpt.Railway:JR-East.Joban","odpt.Railway:Seibu.Toshima","odpt.Railway:Odakyu.Tama","odpt.Railway:Tokyu.Setagaya","odpt.Railway:Seibu.Haijima","odpt.Railway:Seibu.Ikebukuro","odpt.Railway:Seibu.Kokubunji","odpt.Railway:Seibu.SeibuYurakucho","odpt.Railway:Seibu.Seibuen","odpt.Railway:Seibu.Shinjuku","odpt.Railway:Seibu.Tamagawa","odpt.Railway:Seibu.Tamako","odpt.Railway:Seibu.Yamaguchi","odpt.Railway:Tokyu.Kodomonokuni","odpt.Railway:Tokyu.Meguro","odpt.Railway:Tokyu.Oimachi","odpt.Railway:Tokyu.TokyuShinYokohama","odpt.Railway:Tokyu.TokyuTamagawa","odpt.Railway:Tokyu.Toyoko","odpt.Railway:Tobu.Kameido","odpt.Railway:Tobu.TobuSkytreeBranch","odpt.Railway:Hokuso.Hokuso","odpt.Railway:JR-East.HokurikuShinkansen","odpt.Railway:JR-East.JoetsuShinkansen","odpt.Railway:JR-East.TohokuShinkansen","odpt.Railway:JR-East.Ou","odpt.Railway:Keisei.Main","odpt.Railway:Keisei.NaritaSkyAccess","odpt.Railway:Keisei.Oshiage","odpt.Railway:TokyoMetro.Hanzomon","odpt.Railway:MIR.TsukubaExpress","odpt.Railway:TokyoMonorail.HanedaAirport","odpt.Railway:TWR.Rinkai","odpt.Railway:TamaMonorail.TamaMonorail","odpt.Railway:Toei.Arakawa","odpt.Railway:Toei.Asakusa","odpt.Railway:Toei.Mita","odpt.Railway:Toei.NipporiToneri","odpt.Railway:Toei.Oedo","odpt.Railway:Toei.Shinjuku","odpt.Railway:TokyoMetro.Chiyoda","odpt.Railway:TokyoMetro.Fukutoshin","odpt.Railway:TokyoMetro.Ginza","odpt.Railway:TokyoMetro.Hibiya","odpt.Railway:TokyoMetro.Marunouchi","odpt.Railway:TokyoMetro.Namboku","odpt.Railway:TokyoMetro.Tozai","odpt.Railway:TokyoMetro.Yurakucho","odpt.Railway:Yurikamome.Yurikamome","odpt.Railway:Keio.Inokashira","odpt.Railway:Keio.KeioNew","odpt.Railway:Keio.Keio","odpt.Railway:Keio.Sagamihara","odpt.Railway:Keio.Takao","odpt.Railway:JR-East.ChuoRapid","odpt.Railway:JR-East.Hachiko","odpt.Railway:JR-East.Kawagoe","odpt.Railway:JR-East.Itsukaichi","odpt.Railway:JR-East.JobanLocal","odpt.Railway:JR-East.JobanRapid","odpt.Railway:JR-East.KeihinTohokuNegishi","odpt.Railway:JR-East.Keiyo","odpt.Railway:JR-East.Musashino","odpt.Railway:JR-East.Nambu","odpt.Railway:JR-East.Ome","odpt.Railway:JR-East.SaikyoKawagoe","odpt.Railway:JR-East.ShonanShinjuku","odpt.Railway:JR-East.SobuRapid","odpt.Railway:JR-East.SotetsuDirect","odpt.Railway:JR-East.Tokaido","odpt.Railway:JR-East.Utsunomiya","odpt.Railway:JR-East.Yamanote","odpt.Railway:JR-East.Yokohama","odpt.Railway:JR-East.Yokosuka"],神奈川県:["odpt.Railway:Odakyu.Odawara","odpt.Railway:Keikyu.Main","odpt.Railway:Keikyu.Airport","odpt.Railway:Keikyu.Daishi","odpt.Railway:Tokyu.DenEnToshi","odpt.Railway:Tokyu.Ikegami","odpt.Railway:Sotetsu.Izumino","odpt.Railway:Sotetsu.Main","odpt.Railway:Sotetsu.SotetsuShinYokohama","odpt.Railway:JR-Central.TokaidoShinkansen","odpt.Railway:Odakyu.Enoshima","odpt.Railway:Odakyu.Tama","odpt.Railway:Keikyu.Kurihama","odpt.Railway:Keikyu.Zushi","odpt.Railway:Tokyu.Kodomonokuni","odpt.Railway:Tokyu.Meguro","odpt.Railway:Tokyu.Oimachi","odpt.Railway:Tokyu.TokyuShinYokohama","odpt.Railway:Tokyu.TokyuTamagawa","odpt.Railway:Choshi.Choshi","odpt.Railway:Tokyu.Toyoko","odpt.Railway:Enoden.Enoden","odpt.Railway:JR-Central.Tokaido","odpt.Railway:Minatomirai.Minatomirai","odpt.Railway:OdakyuHakone.HakoneTozan","odpt.Railway:ShonanMonorail.ShonanMonorail","odpt.Railway:JR-East.Tokaido","odpt.Railway:JR-East.KeihinTohokuNegishi","odpt.Railway:JR-East.NambuBranch","odpt.Railway:JR-East.Nambu","odpt.Railway:JR-East.Sagami","odpt.Railway:JR-East.ShonanShinjuku","odpt.Railway:JR-East.SotetsuDirect","odpt.Railway:JR-East.TsurumiOkawaBranch","odpt.Railway:JR-East.TsurumiUmiShibauraBranch","odpt.Railway:JR-East.Tsurumi","odpt.Railway:JR-East.Yokohama","odpt.Railway:JR-East.Yokosuka","odpt.Railway:YokohamaMunicipal.Blue","odpt.Railway:YokohamaMunicipal.Green","odpt.Railway:YokohamaSeaside.KanazawaSeaside"],千葉県:["odpt.Railway:JR-East.ChuoSobuLocal","odpt.Railway:ChibaMonorail.Line2","odpt.Railway:Tobu.TobuUrbanPark","odpt.Railway:Isumi.Isumi","odpt.Railway:Choshi.Choshi","odpt.Railway:Tobu.TobuUrbanPark","odpt.Railway:ChibaMonorail.Line1","odpt.Railway:Hokuso.Hokuso","odpt.Railway:Keisei.Chiba","odpt.Railway:Keisei.HigashiNarita","odpt.Railway:Keisei.Kanamachi","odpt.Railway:Keisei.Main","odpt.Railway:Keisei.NaritaSkyAccess","odpt.Railway:Keisei.Oshiage","odpt.Railway:Kominato.Kominato","odpt.Railway:MIR.TsukubaExpress","odpt.Railway:MaihamaResort.DisneyResort","odpt.Railway:Ryutetsu.Nagareyama","odpt.Railway:Shibayama.Shibayama","odpt.Railway:ShinKeisei.ShinKeisei","odpt.Railway:TWR.Rinkai","odpt.Railway:Toei.Shinjuku","odpt.Railway:TokyoMetro.Tozai","odpt.Railway:TokyoMetro.Yurakucho","odpt.Railway:ToyoRapid.ToyoRapid","odpt.Railway:JR-East.Keiyo","odpt.Railway:JR-East.Kashima","odpt.Railway:JR-East.Kururi","odpt.Railway:JR-East.Narita","odpt.Railway:JR-East.Musashino","odpt.Railway:JR-East.NaritaAbikoBranch","odpt.Railway:JR-East.NaritaAirportBranch","odpt.Railway:JR-East.SobuRapid","odpt.Railway:JR-East.Sobu","odpt.Railway:JR-East.Sotobo","odpt.Railway:JR-East.Togane","odpt.Railway:JR-East.Uchibo"],埼玉県:["odpt.Railway:Tobu.TobuSkytree","odpt.Railway:Tobu.Daishi","odpt.Railway:Tobu.TobuUrbanPark","odpt.Railway:Tobu.Tojo","odpt.Railway:Tobu.Ogose","odpt.Railway:Chichibu.Chichibu","odpt.Railway:Seibu.Haijima","odpt.Railway:Seibu.Ikebukuro","odpt.Railway:Seibu.Sayama","odpt.Railway:Seibu.SeibuChichibu","odpt.Railway:Seibu.SeibuYurakucho","odpt.Railway:MIR.TsukubaExpress","odpt.Railway:SaitamaRailway.SaitamaRailway","odpt.Railway:SaitamaTransit.NewShuttle","odpt.Railway:TokyoMetro.Fukutoshin","odpt.Railway:TokyoMetro.Namboku","odpt.Railway:TokyoMetro.Yurakucho","odpt.Railway:JR-East.Kawagoe","odpt.Railway:JR-East.Hachiko","odpt.Railway:JR-East.KeihinTohokuNegishi","odpt.Railway:JR-East.Musashino","odpt.Railway:JR-East.SaikyoKawagoe","odpt.Railway:JR-East.ShonanShinjuku","odpt.Railway:JR-East.Takasaki","odpt.Railway:JR-East.Utsunomiya"],群馬県:["odpt.Railway:Tobu.Kiryu","odpt.Railway:Tobu.Isesaki","odpt.Railway:Tobu.KoizumiBranch","odpt.Railway:Tobu.Koizumi","odpt.Railway:Jomo.Jomo","odpt.Railway:Joshin.Joshin","odpt.Railway:WataraseKeikoku.WataraseKeikoku","odpt.Railway:JR-East.Agatsuma","odpt.Railway:JR-East.Hachiko","odpt.Railway:JR-East.Joetsu","odpt.Railway:JR-East.Ryomo","odpt.Railway:JR-East.Takasaki"],栃木県:["odpt.Railway:Tobu.Nikko","odpt.Railway:Tobu.Kinugawa","odpt.Railway:Tobu.Sano","odpt.Railway:Tobu.Utsunomiya","odpt.Railway:Yagan.AizuKinugawa","odpt.Railway:JR-East.Nikko","odpt.Railway:JR-East.Ryomo","odpt.Railway:JR-East.Utsunomiya","odpt.Railway:JR-East.Karasuyama","odpt.Railway:JR-East.Mito","odpt.Railway:JR-East.Tohoku","odpt.Railway:UtsunomiyaLightRail.UtsunomiyaLightRail"],茨城県:["odpt.Railway:JR-East.Joban","odpt.Railway:JR-East.Mito","odpt.Railway:JR-East.SuigunBranch","odpt.Railway:JR-East.Suigun","odpt.Railway:Hitachinaka.Minato","odpt.Railway:KantoRailway.Ryugasaki","odpt.Railway:KantoRailway.Joso","odpt.Railway:KashimaRinkai.OaraiKashima","odpt.Railway:MIR.TsukubaExpress","odpt.Railway:TokyoMetro.Chiyoda","odpt.Railway:JR-East.JobanLocal","odpt.Railway:JR-East.JobanRapid","odpt.Railway:JR-East.Kashima"],山梨県:["odpt.Railway:Fujikyu.Fujikyu","odpt.Railway:JR-Central.Minobu","odpt.Railway:JR-East.Chuo","odpt.Railway:JR-East.ChuoRapid","odpt.Railway:JR-East.Koumi","odpt.Railway:JR-East.Oito"],静岡県:["odpt.Railway:JR-Central.TokaidoShinkansen","odpt.Railway:JR-Central.Gotemba","odpt.Railway:JR-Central.Minobu","odpt.Railway:JR-Central.Tokaido","odpt.Railway:IzuHakone.Sunzu","odpt.Railway:IzuHakone.Daiyuzan","odpt.Railway:Izukyu.Izukyu","odpt.Railway:JR-East.Ito"],宮城県:["odpt.Railway:JR-East.TohokuShinkansen","odpt.Railway:JR-East.Tohoku","odpt.Railway:JR-East.SensekiTohoku","odpt.Railway:JR-East.Senseki","odpt.Railway:JR-East.Senzan","odpt.Railway:JR-East.Ishinomaki","odpt.Railway:SendaiAirportTransit.SendaiAirport","odpt.Railway:SendaiMunicipal.Namboku","odpt.Railway:SendaiMunicipal.Tozai"],福島県:["odpt.Railway:Aizu.Aizu","odpt.Railway:JR-East.TohokuShinkansen","odpt.Railway:JR-East.YamagataShinkansen","odpt.Railway:JR-East.Tohoku","odpt.Railway:JR-East.OuYamagata","odpt.Railway:JR-East.Ou","odpt.Railway:JR-East.BanetsuEast","odpt.Railway:JR-East.BanetsuWest","odpt.Railway:JR-East.Tadami","odpt.Railway:JR-East.SuigunBranch"],新潟県:["odpt.Railway:JR-East.JoetsuShinkansen","odpt.Railway:JR-East.HokurikuShinkansen","odpt.Railway:JR-East.Joetsu","odpt.Railway:JR-East.Shinetsu","odpt.Railway:JR-East.Uetsu","odpt.Railway:JR-East.Echigo","odpt.Railway:JR-East.Hakushin","odpt.Railway:JR-East.Iiyama","odpt.Railway:JR-East.Yahiko","odpt.Railway:JR-East.Yonesaka","odpt.Railway:Hokuetsu.Hokuhoku"],長野県:["odpt.Railway:JR-East.HokurikuShinkansen","odpt.Railway:JR-East.Chuo","odpt.Railway:JR-East.ChuoTatsunoBranch","odpt.Railway:JR-East.Koumi","odpt.Railway:JR-East.Iiyama","odpt.Railway:JR-East.Oito","odpt.Railway:JR-East.Shinetsu","odpt.Railway:JR-East.Shinonoi"]},L="t2board_railway_uri",C="t2board_station_uri",it="t2board_api_key",gt="t2board_recent_railways",U="t2board_prefecture",Vt=5,Zt=15e3;let st=!1,rt=!1;function Xt(t){document.title=t}function Qt(t){const o=document.getElementById("station-header");o&&(o.textContent=t||"")}function to(){const t=document.getElementById("departures-inbound"),o=document.getElementById("departures-outbound"),i='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=i),o&&(o.innerHTML=i)}function oo(t,o){const i=document.getElementById("direction-inbound-header"),a=document.getElementById("direction-outbound-header");i&&(i.textContent=t),a&&(a.textContent=o)}function yt(t,o,i,a){const n=document.getElementById(`departures-${t}`);if(n){if(o.length===0){n.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}n.innerHTML=o.map(e=>{const u=e["odpt:departureTime"],d=e["odpt:trainType"]||"";let l="N/A";const s=e["odpt:destinationStation"];if(Array.isArray(s)&&s.length>0){const b=s[0];if(typeof b=="string")l=i.get(b)||b;else if(b&&typeof b=="object"){const E=b;if(l=E["dc:title"]||E.title||"N/A",(!l||l==="N/A")&&E["owl:sameAs"]){const S=E["owl:sameAs"];typeof S=="string"&&(l=i.get(S)||S)}}}else typeof s=="string"&&(l=i.get(s)||s);const w=a[d]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${u||""}">--</div>
          <div class="time-col text-center">${u||"--"}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${w.class}">${w.name}</span>
          </div>
          <div class="destination-text">${l}</div>
        </div>`}).join("")}}let G;function ao(t){const[o,i]=(t||"").split(":"),a=Number(o||0),n=Number(i||0);return a*3600+n*60}function pt(){const t=Array.from(document.querySelectorAll("[data-departure]")),o=new Date,i=o.getHours()*3600+o.getMinutes()*60+o.getSeconds();for(const a of t){const n=a.getAttribute("data-departure")||"",u=ao(n)-i;if(u<=0)a.textContent="出発";else if(u<=60)a.textContent="到着";else{const d=Math.ceil(u/60);a.textContent=`${d}分`}}}function io(t=Zt){pt(),typeof G<"u"&&clearInterval(G),G=window.setInterval(pt,t)}function ct(){const t=document.getElementById("time-header");t&&(t.textContent=ft())}function Rt(t,o){const i=localStorage.getItem(C),a=t.find(e=>e.name===o)||t[0];let n=a;if(i){const e=t.find(u=>u.uri===i);e&&(n=e)}else t.length>0&&(n=a||t[0]);return n}function Jt(){try{const t=localStorage.getItem(gt);return t?JSON.parse(t):[]}catch{return[]}}function no(t){try{let o=Jt();o=o.filter(i=>i!==t),o.unshift(t),o=o.slice(0,Vt),localStorage.setItem(gt,JSON.stringify(o))}catch(o){console.warn("Failed to save recent railway:",o)}}function eo(t,o){const i=localStorage.getItem(L),a=t.find(e=>e.uri===o)||t[0];let n=a;if(i){const e=t.find(u=>u.uri===i);e&&(n=e)}else t.length>0&&(n=a||t[0]);return n}function uo(t){if(!t)return"その他";const o=t.split(":"),i=o.length>1?o[1]:t;return{Tokyu:"東急",JR:"JR",Toei:"都営",TokyoMetro:"東京メトロ",Odakyu:"小田急",Keio:"京王",Seibu:"西武",Tobu:"東武",Keisei:"京成",Keikyu:"京急",Sotetsu:"相鉄",YokohamaMunicipal:"横浜市営"}[i]||i}function lo(t,o,i,a,n,e,u){const d=document.getElementById("config-modal"),l=document.getElementById("railway-select"),s=document.getElementById("station-select"),w=document.getElementById("prefecture-select");if(!d||!l||!s||!w)return;function b(g,f){if(!l)return;let y="";const p=Jt();let R=null;f&&W[f]&&(R=new Set(W[f]));const k=p.map(r=>t.find(m=>m.uri===r)).filter(r=>r!==void 0).filter(r=>R?R.has(r.uri):!0);if(k.length>0){y+='<optgroup label="最近使用した路線">';for(const r of k)y+=`<option value="${r.uri}" ${r.uri===g?"selected":""}>${r.name}</option>`;y+="</optgroup>"}const J=new Map;for(const r of t){if(R&&!R.has(r.uri))continue;const m=uo(r.operator);J.has(m)||J.set(m,[]),J.get(m).push(r)}const $=Array.from(J.keys()).sort((r,m)=>r.localeCompare(m,"ja"));for(const r of $){const m=J.get(r);y+=`<optgroup label="${r}">`;for(const z of m)y+=`<option value="${z.uri}" ${z.uri===g?"selected":""}>${z.name}</option>`;y+="</optgroup>"}l.innerHTML=y}function E(g){if(!w)return;const f=Object.keys(W).sort((y,p)=>y.localeCompare(p,"ja"));w.innerHTML=f.map(y=>`<option value="${y}" ${y===g?"selected":""}>${y}</option>`).join("")}function S(g){if(!s)return;const f=K();s.innerHTML=f.map(y=>`<option value="${y.uri}" ${y.uri===g?"selected":""}>${y.name}</option>`).join("")}const et=localStorage.getItem(U)||"東京都";E(et),b(i,et),S(a),rt||(document.getElementById("settings-button")?.addEventListener("click",()=>{const p=localStorage.getItem(L),R=localStorage.getItem(C),k=localStorage.getItem(U)||"東京都";E(k),b(p,k),S(R),so()}),document.getElementById("close-modal")?.addEventListener("click",()=>{q()}),l?.addEventListener("change",async()=>{if(!l)return;const p=l.value;if(s&&(s.innerHTML="<option>駅を読込中...</option>",s.disabled=!0),u)try{await u(p),S(null)}catch(R){console.error("Failed to load stations:",R),s&&(s.innerHTML="<option>駅の読込に失敗しました</option>")}finally{s&&(s.disabled=!1)}}),w?.addEventListener("change",async()=>{if(!w)return;const p=w.value;try{localStorage.setItem(U,p)}catch{}b(null,p)}),document.getElementById("save-settings")?.addEventListener("click",()=>{if(!l||!s||!w)return;const p=l.value,R=s.value,k=w.value,J=localStorage.getItem(L),$=localStorage.getItem(C),r=localStorage.getItem(U);localStorage.setItem(U,k),localStorage.setItem(L,p),localStorage.setItem(C,R),no(p),k!==r||p!==J?n(p):R!==$&&e(R),q()}),d.addEventListener("click",p=>{p.target===d&&q()}),rt=!0)}function wt(t,o){const i=document.getElementById("api-key-modal"),a=document.getElementById("api-key-input");if(!(!i||!a)&&(a.value=t||"",!st)){const n=document.getElementById("save-api-key"),e=document.getElementById("close-api-key");n?.addEventListener("click",()=>{const u=a.value?a.value.trim():null;u?localStorage.setItem(it,u):localStorage.removeItem(it),o(u),V()}),e?.addEventListener("click",()=>V()),i.addEventListener("click",u=>{u.target===i&&V()}),st=!0}}function so(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function q(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function It(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function V(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function Kt(t,o="info"){const i=document.getElementById("status-banner");i&&(i.classList.remove("hidden"),i.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),o==="error"?i.classList.add("bg-red-100","text-red-800"):o==="warn"?i.classList.add("bg-yellow-100"):i.classList.add("bg-blue-100"),i.textContent=t)}function ro(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}let j=null,xt="https://api-challenge.odpt.org/api/v4/",At="odpt.Railway:Tokyu.Toyoko",nt="武蔵小杉 (TY11)";const yo=15e4,po=3e5,co=1e3;function bt(t){j=t}function T(){return j}function N(){return xt}async function Ro(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const o=await t.json();o?.ODPT_API_KEY&&(j=o.ODPT_API_KEY),o?.DEFAULT_RAILWAY&&(At=o.DEFAULT_RAILWAY),o?.DEFAULT_STATION_NAME&&(nt=o.DEFAULT_STATION_NAME),o?.API_BASE_URL&&(xt=o.API_BASE_URL)}catch(t){const o=t instanceof Error?t:new Error(String(t));console.warn("Failed to load ./config.json:",o.message)}}async function wo(){await Ro();try{const t=localStorage.getItem(it);t&&(j=t)}catch{}}let c={railwayUri:null,stationUri:null,stationName:null},Z,X;function I(){return c}function v(t){c=t}function bo(){if(!T()){const a=document.getElementById("departures-inbound"),n=document.getElementById("departures-outbound"),e='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>';return a&&(a.innerHTML=e),n&&(n.innerHTML=e),null}const i=K().find(a=>a.uri===c.stationUri);if(!i||!c.railwayUri){const a=kt("station-header");return a&&(a.textContent="エラー: 駅または路線が選択されていません"),null}return i}async function Y(t){const o=T();if(!o)return!1;let i=[];try{i=await Lt(t,o,N(),c.railwayUri)}catch(d){const l=d instanceof Error?d.message:String(d);return console.error("Failed to fetch timetable:",l),Kt("API エラーが発生しました。API キーを確認してください。","error"),It(),!1}const n=mt(ft(new Date)),e=ut(i,Pt(),n),u=ut(i,jt(),n);return await qt(o,N(),e,u),yt("inbound",e,A,D),yt("outbound",u,A,D),io(),!0}async function mo(){const t=T();if(t)try{c.railwayUri&&(await tt(t,N(),c.railwayUri),ro())}catch(o){const i=o instanceof Error?o.message:String(o);console.warn("Failed to fetch status:",i),Kt("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}}function fo(t){typeof Z<"u"&&clearInterval(Z),typeof X<"u"&&clearInterval(X),Z=window.setInterval(async()=>{try{const o=localStorage.getItem(C);o?await Y(o):await Y(c.stationUri)}catch{c.stationUri&&await Y(c.stationUri)}},yo),X=window.setInterval(async()=>{const o=T();if(o)try{const a=localStorage.getItem(L)||c.railwayUri;a&&await tt(o,N(),a)}catch{c.railwayUri&&await tt(o,N(),c.railwayUri)}},po),window.setInterval(ct,co),ct()}async function Q(){try{const i=localStorage.getItem(L),a=localStorage.getItem(C);if(i&&(c.railwayUri=i),a){c.stationUri=a;const e=K().find(u=>u.uri===a);e&&(c.stationName=e.name)}}catch(i){console.warn("Failed to load config from localStorage:",i)}const t=bo();!t||(Qt(t.name),to(),oo($t(),zt()),!await Y(t.uri))||(await mo(),fo(t.uri))}async function P(){try{await wo()}catch(e){const u=e instanceof Error?e:new Error(String(e));console.warn("Error loading local config:",u.message)}if(Ht(),!T()){wt(T(),e=>{e&&bt(e),P()}),It();return}const t=String(T()),o=N();await Wt(t,o),await Gt(t,o);try{const u=(await Nt(t,o)).filter(d=>d["@type"]==="odpt:Railway").map(d=>{const l=O(d["dc:title"]||d["odpt:railwayTitle"]),s=d["odpt:operator"]||"";return{uri:d["owl:sameAs"]||d["@id"]||"",name:l,operator:s}}).filter(d=>d.uri&&d.name).sort((d,l)=>d.name.localeCompare(l.name,"ja"));Ft(u)}catch(e){const u=e instanceof Error?e:new Error(String(e));console.error("Error fetching railway list:",u.message);const d=kt("station-header");d&&(d.textContent="エラー: 路線リスト取得失敗")}const i=eo(dt(),At);let a=I();i&&(a.railwayUri=i.uri,v(a),await lt(i.uri,t,o)),a.railwayUri&&await F(a.railwayUri,t,o);const n=Rt(K(),nt);n&&(a=I(),a.stationUri=n.uri,a.stationName=n.name,v(a)),wt(T(),e=>{e&&bt(e),P()}),lo(dt(),K(),I().railwayUri,I().stationUri,async e=>{let u=I();u.railwayUri=e,v(u),await lt(e,t,o),await F(e,t,o);const d=Rt(K(),nt);d&&(u=I(),u.stationUri=d.uri,u.stationName=d.name,v(u)),Q()},e=>{const u=K().find(l=>l.uri===e),d=I();d.stationUri=e,d.stationName=u?u.name:null,v(d),Q()},async e=>{await F(e,t,o)}),Q()}window.initializeBoard=P;window.onload=P;
