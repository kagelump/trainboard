(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function i(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(o){if(o.ep)return;o.ep=!0;const r=i(o);fetch(o.href,r)}})();async function b(t,e=3,i=1e3){for(let n=0;n<e;n++)try{const o=await fetch(t);if(!o.ok)throw new Error(`HTTP ${o.status}`);return o}catch(o){if(n===e-1)throw o;await new Promise(r=>setTimeout(r,i*2**n))}throw new Error("Unreachable")}async function Et(t,e,i){if(!t||!e)throw new Error("API key and base URL are required");const n=new URLSearchParams({"acl:consumerKey":String(t)});i&&n.append("odpt:railway",i);const o=`${e}odpt:Station?${n.toString()}`;return await(await b(o)).json()}async function St(t,e,i,n){if(!e||!i||!t||!n)throw new Error("API key, base URL, station URI, and railway URI are required");const o=(()=>{const l=new Date().getDay();return l>=1&&l<=5?"odpt.Calendar:Weekday":"odpt.Calendar:SaturdayHoliday"})(),r=new URLSearchParams({"acl:consumerKey":String(e),"odpt:railway":n,"odpt:station":t,"odpt:calendar":o}),a=`${i}odpt:StationTimetable?${r.toString()}`;return await(await b(a)).json()}async function it(t,e,i){if(!t||!e||!i)throw new Error("API key, base URL, and railway URI are required");const n=new URLSearchParams({"acl:consumerKey":String(t),"odpt:railway":i}),o=`${e}odpt:TrainInformation?${n.toString()}`;return await(await b(o)).json()}async function kt(t,e,i){if(!e||!i)throw new Error("API key and base URL are required");if(t.length===0)return[];const n=new URLSearchParams({"acl:consumerKey":String(e)});n.append("owl:sameAs",t.join(","));const o=`${i}odpt:Station?${n.toString()}`;return await(await b(o)).json()}async function xt(t,e){if(!t||!e)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:Railway?${i.toString()}`;return await(await b(n)).json()}async function It(t,e,i){if(!e||!i||!t)throw new Error("API key, base URL, and railway URI are required");const n=new URLSearchParams({"acl:consumerKey":String(e)});n.append("owl:sameAs",t);const o=`${i}odpt:Railway?${n.toString()}`,a=await(await b(o)).json();return a.length>0?a[0]:null}async function Rt(t,e){if(!t||!e)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:RailDirection?${i.toString()}`;return await(await b(n)).json()}async function Lt(t,e){if(!t||!e)throw new Error("API key and base URL are required");const i=new URLSearchParams({"acl:consumerKey":String(t)}),n=`${e}odpt:TrainType?${i.toString()}`;return await(await b(n)).json()}function k(t){if(!t)return"N/A";if(typeof t=="string")return t;const e=t;return e.ja||e.en||"N/A"}function ot(t){const[e,i]=t.split(":").map(n=>Number(n));return e*60+i}function q(t,e,i,n=5){return(t.find(a=>a["odpt:railDirection"]===e)?.["odpt:stationTimetableObject"]??[]).filter(a=>typeof a["odpt:departureTime"]=="string").filter(a=>ot(a["odpt:departureTime"])>=i).slice(0,n)}function At(...t){const e=new Set;for(const i of t)for(const n of i??[]){const o=n["odpt:destinationStation"];if(o)if(Array.isArray(o)){for(const r of o)if(r){if(typeof r=="string")e.add(r);else if(typeof r=="object"){const a=r["owl:sameAs"]||r["@id"]||r.id;a&&typeof a=="string"&&e.add(a)}}}else typeof o=="string"&&e.add(o)}return e}function rt(t=new Date){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}function at(t){return document.getElementById(t)}class _t{constructor(e=500,i,n){if(this.maxEntries=e,this.ttlMs=i,this.persistKeyName=n,this.map=new Map,n&&typeof localStorage<"u")try{const o=localStorage.getItem(n);if(o){const r=JSON.parse(o);for(const a of Object.keys(r)){const s=r[a];(!s.expires||s.expires>Date.now())&&this.map.set(a,s)}}}catch(o){const r=o instanceof Error?o.message:String(o);console.warn(`Failed to restore cache from localStorage key "${n}":`,r)}}get(e){const i=this.map.get(e);if(i){if(i.expires&&i.expires<=Date.now()){this.map.delete(e);return}return this.map.delete(e),this.map.set(e,i),i.v}}set(e,i){const n=this.ttlMs?Date.now()+this.ttlMs:void 0;for(this.map.has(e)&&this.map.delete(e),this.map.set(e,{v:i,expires:n});this.map.size>this.maxEntries;){const o=this.map.keys().next().value;this.map.delete(o)}this.persistKeyName&&this.persist()}has(e){return typeof this.get(e)<"u"}persist(){if(this.persistKeyName)try{const e={};for(const[i,n]of this.map.entries())e[i]=n;localStorage.setItem(this.persistKeyName,JSON.stringify(e))}catch(e){const i=e instanceof Error?e.message:String(e);console.warn(`Failed to persist cache to localStorage key "${this.persistKeyName}":`,i)}}keys(){return Array.from(this.map.keys())}enablePersistence(e){this.persistKeyName=e,this.persist()}}const st={"odpt.TrainType:Sotetsu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Sotetsu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Sotetsu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Sotetsu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Sotetsu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Sotetsu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Odakyu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Odakyu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Odakyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Odakyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Odakyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Odakyu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Odakyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Keikyu.AccessExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.AirportRapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.CommuterLimitedExpress":{outline:"black",text:"red",fill:"white"},"odpt.TrainType:Keikyu.EveningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Keikyu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Keikyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Keikyu.MorningWing":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Keikyu.RapidLimitedExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Keikyu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.CommuterExpress":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:Seibu.CommuterSemiExpress":{outline:"black",text:"yellow",fill:"black"},"odpt.TrainType:Seibu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Seibu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.HaijimaLiner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Seibu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Seibu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Seibu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Seibu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Seibu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tokyu.CommuterLimitedExpress":{outline:"yellow",text:"red",fill:"white"},"odpt.TrainType:Tokyu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tokyu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.LimitedExpress":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tokyu.S-TRAIN":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tokyu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.F-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.KawagoeLimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:Tobu.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:Tobu.RapidExpress":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:Tobu.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:Tobu.SL-Taiju":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.SectionExpress":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:Tobu.SectionSemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.SemiExpress":{outline:"black",text:"black",fill:"gray"},"odpt.TrainType:Tobu.TH-LINER":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:Tobu.TJ-Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.ChuoSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.CommuterRapid":{outline:"black",text:"red",fill:"black"},"odpt.TrainType:JR-East.CommuterSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Express":{outline:"black",text:"white",fill:"red"},"odpt.TrainType:JR-East.LimitedExpress":{outline:"black",text:"black",fill:"red"},"odpt.TrainType:JR-East.Liner":{outline:"yellow",text:"white",fill:"black"},"odpt.TrainType:JR-East.Local":{outline:"black",text:"black",fill:"white"},"odpt.TrainType:JR-East.OmeSpecialRapid":{outline:"black",text:"yellow",fill:"red"},"odpt.TrainType:JR-East.Rapid":{outline:"black",text:"white",fill:"black"},"odpt.TrainType:JR-East.SpecialRapid":{outline:"black",text:"yellow",fill:"red"}};function Nt(){if(document.getElementById("train-type-dynamic-styles"))return;const t=document.createElement("style");t.id="train-type-dynamic-styles";let e="";for(const[i,n]of Object.entries(st)){const o=lt(i);e+=`
.${o} {
  background-color: ${n.fill};
  color: ${n.text};
  border: 2px solid ${n.outline};
}
`}t.textContent=e,document.head.appendChild(t)}function lt(t){return"train-type-"+t.replace(/[:.]/g,"-")}function vt(t){return t in st?lt(t):"type-LOC"}let ct=[],Ct=null,L=null,A=null,j="渋谷・副都心線方面",H="横浜・元町中華街方面";const v={},_=new Map;let dt=[];const E=new _t(500);function Ot(){return L||"odpt.RailDirection:Inbound"}function Ut(){return A||"odpt.RailDirection:Outbound"}function Mt(){return j}function Dt(){return H}function W(){return ct}function $t(t){ct=t}function S(){return dt}async function Pt(t,e){try{const i=await Rt(t,e);for(const n of i){const o=n["owl:sameAs"]||n["@id"],r=k(n["dc:title"]);o&&typeof o=="string"&&_.set(o,r)}}catch(i){const n=i instanceof Error?i.message:String(i);console.warn("Failed to load direction names:",n)}}async function Bt(t,e){try{const i=await Lt(t,e);for(const n of i){const o=n["owl:sameAs"]||n["@id"];if(!o||typeof o!="string")continue;const r=k(n["dc:title"]);if(!r)continue;const a=vt(o);v[o]={name:r,class:a}}console.log(`Loaded ${Object.keys(v).length} train types`)}catch(i){const n=i instanceof Error?i.message:String(i);console.warn("Failed to load train types:",n)}}async function G(t,e,i){try{const n=await It(t,e,i);if(!n){console.warn("Railway not found:",t);return}Ct=n,L=n["odpt:ascendingRailDirection"]||"odpt.RailDirection:Inbound",A=n["odpt:descendingRailDirection"]||"odpt.RailDirection:Outbound",L&&_.has(L)&&(j=_.get(L)||j),A&&_.has(A)&&(H=_.get(A)||H);const o=k(n["dc:title"]||n["odpt:railwayTitle"]);Ht(`${o} 発車案内板`)}catch(n){const o=n instanceof Error?n.message:String(n);console.warn("Failed to load railway metadata:",o)}}async function M(t,e,i){try{dt=(await Et(e,i,t)).map(o=>{const r=k(o["dc:title"]||o["odpt:stationTitle"]),a=o["odpt:stationCode"]||"";return{name:a?`${r} (${a})`:r,uri:o["owl:sameAs"]||"",code:a}}).filter(o=>o.uri).sort((o,r)=>{if(o.code&&r.code){const a=o.code.match(/\d+/),s=r.code.match(/\d+/);if(a&&s){const l=parseInt(a[0],10),c=parseInt(s[0],10);if(l!==c)return l-c}return o.code.localeCompare(r.code)}return o.name.localeCompare(r.name,"ja")})}catch(n){const o=n instanceof Error?n.message:String(n);console.error("Error fetching station list:",o)}}async function Kt(t,e,...i){const n=At(...i),o=Array.from(n).filter(r=>!E.has(r));if(o.length!==0)try{const r=await kt(o,t,e);for(const a of r){const s=a["owl:sameAs"]||a["@id"]||a.id,l=k(a["dc:title"]||a["odpt:stationTitle"]||a.title);s&&typeof s=="string"&&E.set(s,l)}for(const a of o)E.has(a)||E.set(a,a)}catch(r){const a=r instanceof Error?r.message:String(r);console.warn("Failed to fetch station names for destinations:",a)}}const ut="t2board_railway_uri",pt="t2board_station_uri",J="t2board_api_key",ft="t2board_recent_railways",Ft=5,jt=15e3;let z=!1,V=!1;function Ht(t){document.title=t}function Jt(t){const e=document.getElementById("station-header");e&&(e.textContent=t||"")}function Yt(){const t=document.getElementById("departures-inbound"),e=document.getElementById("departures-outbound"),i='<p class="text-center text-2xl pt-8">時刻表を取得中...</p>';t&&(t.innerHTML=i),e&&(e.innerHTML=i)}function qt(t,e){const i=document.getElementById("direction-inbound-header"),n=document.getElementById("direction-outbound-header");i&&(i.textContent=t),n&&(n.textContent=e)}function X(t,e,i,n){const o=document.getElementById(`departures-${t}`);if(o){if(e.length===0){o.innerHTML='<p class="text-center text-2xl pt-8">本日の発車予定はありません。</p>';return}o.innerHTML=e.map(r=>{const a=r["odpt:departureTime"],s=r["odpt:trainType"]||"";let l="N/A";const c=r["odpt:destinationStation"];if(Array.isArray(c)&&c.length>0){const y=c[0];if(typeof y=="string")l=i.get(y)||y;else if(y&&typeof y=="object"){const m=y;if(l=m["dc:title"]||m.title||"N/A",(!l||l==="N/A")&&m["owl:sameAs"]){const u=m["owl:sameAs"];typeof u=="string"&&(l=i.get(u)||u)}}}else typeof c=="string"&&(l=i.get(c)||c);const x=n[s]||{name:"不明",class:"type-LOC"};return`
        <div class="train-row items-center justify-between">
          <div class="minutes-col text-center" data-departure="${a||""}">--</div>
          <div class="time-col text-center">${a||"--"}</div>
          <div class="flex justify-center items-center">
            <span class="train-type-badge ${x.class}">${x.name}</span>
          </div>
          <div class="destination-text">${l}</div>
        </div>`}).join("")}}let D;function Wt(t){const[e,i]=(t||"").split(":"),n=Number(e||0),o=Number(i||0);return n*3600+o*60}function Q(){const t=Array.from(document.querySelectorAll("[data-departure]")),e=new Date,i=e.getHours()*3600+e.getMinutes()*60+e.getSeconds();for(const n of t){const o=n.getAttribute("data-departure")||"",a=Wt(o)-i;if(a<=0)n.textContent="出発";else if(a<=60)n.textContent="到着";else{const s=Math.ceil(a/60);n.textContent=`${s}分`}}}function Gt(t=jt){Q(),typeof D<"u"&&clearInterval(D),D=window.setInterval(Q,t)}function Z(){const t=document.getElementById("time-header");t&&(t.textContent=rt())}function tt(t,e){const i=localStorage.getItem(pt),n=t.find(r=>r.name===e)||t[0];let o=n;if(i){const r=t.find(a=>a.uri===i);r&&(o=r)}else t.length>0&&(o=n||t[0]);return o}function yt(){try{const t=localStorage.getItem(ft);return t?JSON.parse(t):[]}catch{return[]}}function zt(t){try{let e=yt();e=e.filter(i=>i!==t),e.unshift(t),e=e.slice(0,Ft),localStorage.setItem(ft,JSON.stringify(e))}catch(e){console.warn("Failed to save recent railway:",e)}}function Vt(t,e){const i=localStorage.getItem(ut),n=t.find(r=>r.uri===e)||t[0];let o=n;if(i){const r=t.find(a=>a.uri===i);r&&(o=r)}else t.length>0&&(o=n||t[0]);return o}function Xt(t){if(!t)return"その他";const e=t.split(":"),i=e.length>1?e[1]:t;return{Tokyu:"東急",JR:"JR",Toei:"都営",TokyoMetro:"東京メトロ",Odakyu:"小田急",Keio:"京王",Seibu:"西武",Tobu:"東武",Keisei:"京成",Keikyu:"京急",Sotetsu:"相鉄",YokohamaMunicipal:"横浜市営"}[i]||i}function Qt(t,e,i,n,o,r,a){const s=document.getElementById("config-modal"),l=document.getElementById("railway-select"),c=document.getElementById("station-select");if(!s||!l||!c)return;function x(m){if(!l)return;let u="";const p=yt().map(d=>t.find(T=>T.uri===d)).filter(d=>d!==void 0);if(p.length>0){u+='<optgroup label="最近使用した路線">';for(const d of p)u+=`<option value="${d.uri}" ${d.uri===m?"selected":""}>${d.name}</option>`;u+="</optgroup>"}const f=new Map;for(const d of t){const T=Xt(d.operator);f.has(T)||f.set(T,[]),f.get(T).push(d)}const ht=Array.from(f.keys()).sort((d,T)=>d.localeCompare(T,"ja"));for(const d of ht){const T=f.get(d);u+=`<optgroup label="${d}">`;for(const U of T)u+=`<option value="${U.uri}" ${U.uri===m?"selected":""}>${U.name}</option>`;u+="</optgroup>"}l.innerHTML=u}function y(m){if(!c)return;const u=S();c.innerHTML=u.map(I=>`<option value="${I.uri}" ${I.uri===m?"selected":""}>${I.name}</option>`).join("")}x(i),y(n),V||(document.getElementById("settings-button")?.addEventListener("click",()=>{x(i),y(n),Zt()}),document.getElementById("close-modal")?.addEventListener("click",()=>{$()}),l?.addEventListener("change",async()=>{if(!l)return;const p=l.value;if(c&&(c.innerHTML="<option>駅を読込中...</option>",c.disabled=!0),a)try{await a(p),y(null)}catch(f){console.error("Failed to load stations:",f),c&&(c.innerHTML="<option>駅の読込に失敗しました</option>")}finally{c&&(c.disabled=!1)}}),document.getElementById("save-settings")?.addEventListener("click",()=>{if(!l||!c)return;const p=l.value,f=c.value;localStorage.setItem(ut,p),localStorage.setItem(pt,f),zt(p),p!==i?o(p):f!==n&&r(f),$()}),s.addEventListener("click",p=>{p.target===s&&$()}),V=!0)}function et(t,e){const i=document.getElementById("api-key-modal"),n=document.getElementById("api-key-input");if(!(!i||!n)&&(n.value=t||"",!z)){const o=document.getElementById("save-api-key"),r=document.getElementById("close-api-key");o?.addEventListener("click",()=>{const a=n.value?n.value.trim():null;a?localStorage.setItem(J,a):localStorage.removeItem(J),e(a),P()}),r?.addEventListener("click",()=>P()),i.addEventListener("click",a=>{a.target===i&&P()}),z=!0}}function Zt(){const t=document.getElementById("config-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function $(){const t=document.getElementById("config-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function mt(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("hidden"),t.classList.add("flex","opacity-100"))}function P(){const t=document.getElementById("api-key-modal");t&&(t.classList.remove("flex","opacity-100"),t.classList.add("hidden"))}function Tt(t,e="info"){const i=document.getElementById("status-banner");i&&(i.classList.remove("hidden"),i.classList.remove("bg-red-100","bg-yellow-100","bg-blue-100","text-red-800"),e==="error"?i.classList.add("bg-red-100","text-red-800"):e==="warn"?i.classList.add("bg-yellow-100"):i.classList.add("bg-blue-100"),i.textContent=t)}function te(){const t=document.getElementById("status-banner");t&&(t.classList.add("hidden"),t.textContent="")}let O=null,wt="https://api-challenge.odpt.org/api/v4/",gt="odpt.Railway:Tokyu.Toyoko",Y="武蔵小杉 (TY11)";const ee=15e4,ne=3e5,ie=1e3;function nt(t){O=t}function g(){return O}function N(){return wt}async function oe(){try{const t=await fetch("./config.json",{cache:"no-store"});if(!t.ok)return;const e=await t.json();e?.ODPT_API_KEY&&(O=e.ODPT_API_KEY),e?.DEFAULT_RAILWAY&&(gt=e.DEFAULT_RAILWAY),e?.DEFAULT_STATION_NAME&&(Y=e.DEFAULT_STATION_NAME),e?.API_BASE_URL&&(wt=e.API_BASE_URL)}catch(t){const e=t instanceof Error?t:new Error(String(t));console.warn("Failed to load ./config.json:",e.message)}}async function re(){await oe();try{const t=localStorage.getItem(J);t&&(O=t)}catch{}}let w={railwayUri:null,stationUri:null,stationName:null},B,K;function h(){return w}function R(t){w=t}function ae(){if(!g()){const n=document.getElementById("departures-inbound"),o=document.getElementById("departures-outbound"),r='<p class="text-center text-red-500 text-2xl pt-8">エラー: config.json に ODPT_API_KEY を設定してください。</p>';return n&&(n.innerHTML=r),o&&(o.innerHTML=r),null}const i=S().find(n=>n.uri===w.stationUri);if(!i||!w.railwayUri){const n=at("station-header");return n&&(n.textContent="エラー: 駅または路線が選択されていません"),null}return i}async function bt(t){const e=g();if(!e)return!1;let i=[];try{i=await St(t,e,N(),w.railwayUri)}catch(s){const l=s instanceof Error?s.message:String(s);return console.error("Failed to fetch timetable:",l),Tt("API エラーが発生しました。API キーを確認してください。","error"),mt(),!1}const o=ot(rt(new Date)),r=q(i,Ot(),o),a=q(i,Ut(),o);return await Kt(e,N(),r,a),X("inbound",r,E,v),X("outbound",a,E,v),Gt(),!0}async function se(){const t=g();if(t)try{w.railwayUri&&(await it(t,N(),w.railwayUri),te())}catch(e){const i=e instanceof Error?e.message:String(e);console.warn("Failed to fetch status:",i),Tt("運行情報取得でエラーが発生しました。API キーを確認してください。","warn")}}function le(t){typeof B<"u"&&clearInterval(B),typeof K<"u"&&clearInterval(K),B=window.setInterval(async()=>{await bt(t)},ee),K=window.setInterval(()=>{const e=g();w.railwayUri&&e&&it(e,N(),w.railwayUri)},ne),window.setInterval(Z,ie),Z()}async function F(){const t=ae();!t||(Jt(t.name),Yt(),qt(Mt(),Dt()),!await bt(t.uri))||(await se(),le(t.uri))}async function C(){try{await re()}catch(r){const a=r instanceof Error?r:new Error(String(r));console.warn("Error loading local config:",a.message)}if(Nt(),!g()){et(g(),r=>{r&&nt(r),C()}),mt();return}const t=String(g()),e=N();await Pt(t,e),await Bt(t,e);try{const a=(await xt(t,e)).filter(s=>s["@type"]==="odpt:Railway").map(s=>{const l=k(s["dc:title"]||s["odpt:railwayTitle"]),c=s["odpt:operator"]||"";return{uri:s["owl:sameAs"]||s["@id"]||"",name:l,operator:c}}).filter(s=>s.uri&&s.name).sort((s,l)=>s.name.localeCompare(l.name,"ja"));$t(a)}catch(r){const a=r instanceof Error?r:new Error(String(r));console.error("Error fetching railway list:",a.message);const s=at("station-header");s&&(s.textContent="エラー: 路線リスト取得失敗")}const i=Vt(W(),gt);let n=h();i&&(n.railwayUri=i.uri,R(n),await G(i.uri,t,e)),n.railwayUri&&await M(n.railwayUri,t,e);const o=tt(S(),Y);o&&(n=h(),n.stationUri=o.uri,n.stationName=o.name,R(n)),et(g(),r=>{r&&nt(r),C()}),Qt(W(),S(),h().railwayUri,h().stationUri,async r=>{let a=h();a.railwayUri=r,R(a),await G(r,t,e),await M(r,t,e);const s=tt(S(),Y);s&&(a=h(),a.stationUri=s.uri,a.stationName=s.name,R(a)),F()},r=>{const a=S().find(l=>l.uri===r),s=h();s.stationUri=r,s.stationName=a?a.name:null,R(s),F()},async r=>{await M(r,t,e)}),F()}window.initializeBoard=C;window.onload=C;
